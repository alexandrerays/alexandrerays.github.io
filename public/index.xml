<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Alexandre Ray</title><link>https://alexandrerays.github.io/</link><atom:link href="https://alexandrerays.github.io/index.xml" rel="self" type="application/rss+xml"/><description>Alexandre Ray</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Thu, 20 Mar 2025 00:00:00 +0000</lastBuildDate><image><url>https://alexandrerays.github.io/media/icon_hu82c6599c132dd59e4c5438f5b06fe553_25162_512x512_fill_lanczos_center_3.png</url><title>Alexandre Ray</title><link>https://alexandrerays.github.io/</link></image><item><title>Python basics</title><link>https://alexandrerays.github.io/courses/example/python/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/courses/example/python/</guid><description>&lt;p>Build a foundation in Python.&lt;/p>
&lt;p>
&lt;i class="fas fa-clock pr-1 fa-fw">&lt;/i> 1-2 hours per week, for 8 weeks&lt;/p>
&lt;h2 id="learn">Learn&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/rfscVS0vtbw" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;h2 id="quiz">Quiz&lt;/h2>
&lt;details class="spoiler " id="spoiler-2">
&lt;summary>What is the difference between lists and tuples?&lt;/summary>
&lt;p>&lt;p>Lists&lt;/p>
&lt;ul>
&lt;li>Lists are mutable - they can be changed&lt;/li>
&lt;li>Slower than tuples&lt;/li>
&lt;li>Syntax: &lt;code>a_list = [1, 2.0, 'Hello world']&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Tuples&lt;/p>
&lt;ul>
&lt;li>Tuples are immutable - they can&amp;rsquo;t be changed&lt;/li>
&lt;li>Tuples are faster than lists&lt;/li>
&lt;li>Syntax: &lt;code>a_tuple = (1, 2.0, 'Hello world')&lt;/code>&lt;/li>
&lt;/ul>
&lt;/p>
&lt;/details>
&lt;details class="spoiler " id="spoiler-3">
&lt;summary>Is Python case-sensitive?&lt;/summary>
&lt;p>Yes&lt;/p>
&lt;/details></description></item><item><title>Visualization</title><link>https://alexandrerays.github.io/courses/example/visualization/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/courses/example/visualization/</guid><description>&lt;p>Learn how to visualize data with Plotly.&lt;/p>
&lt;p>
&lt;i class="fas fa-clock pr-1 fa-fw">&lt;/i> 1-2 hours per week, for 8 weeks&lt;/p>
&lt;h2 id="learn">Learn&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/hSPmj7mK6ng" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;h2 id="quiz">Quiz&lt;/h2>
&lt;details class="spoiler " id="spoiler-2">
&lt;summary>When is a heatmap useful?&lt;/summary>
&lt;p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p>
&lt;/details>
&lt;details class="spoiler " id="spoiler-3">
&lt;summary>Write Plotly code to render a bar chart&lt;/summary>
&lt;p>&lt;pre>&lt;code class="language-python">import plotly.express as px
data_canada = px.data.gapminder().query(&amp;quot;country == 'Canada'&amp;quot;)
fig = px.bar(data_canada, x='year', y='pop')
fig.show()
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details></description></item><item><title>Statistics</title><link>https://alexandrerays.github.io/courses/example/stats/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/courses/example/stats/</guid><description>&lt;p>Introduction to statistics for data science.&lt;/p>
&lt;p>
&lt;i class="fas fa-clock pr-1 fa-fw">&lt;/i> 1-2 hours per week, for 8 weeks&lt;/p>
&lt;h2 id="learn">Learn&lt;/h2>
&lt;p>The general form of the &lt;strong>normal&lt;/strong> probability density function is:&lt;/p>
&lt;p>$$
f(x) = \frac{1}{\sigma \sqrt{2\pi} } e^{-\frac{1}{2}\left(\frac{x-\mu}{\sigma}\right)^2}
$$&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
The parameter $\mu$ is the mean or expectation of the distribution.
$\sigma$ is its standard deviation.
The variance of the distribution is $\sigma^{2}$.
&lt;/div>
&lt;/div>
&lt;h2 id="quiz">Quiz&lt;/h2>
&lt;details class="spoiler " id="spoiler-2">
&lt;summary>What is the parameter $\mu$?&lt;/summary>
&lt;p>The parameter $\mu$ is the mean or expectation of the distribution.&lt;/p>
&lt;/details></description></item><item><title>Driving Impact Through Innovation - OncoAI at Impacta Mais 2025</title><link>https://alexandrerays.github.io/talk/driving-impact-through-innovation-oncoai-at-impacta-mais-2025/</link><pubDate>Thu, 20 Mar 2025 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/talk/driving-impact-through-innovation-oncoai-at-impacta-mais-2025/</guid><description/></item><item><title>Harnessing artificial intelligence for predicting breast cancer recurrence: a systematic review of clinical and imaging data</title><link>https://alexandrerays.github.io/publication/harnessing-artificial-intelligence-for-predicting/</link><pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/publication/harnessing-artificial-intelligence-for-predicting/</guid><description/></item><item><title>Development of artificial intelligence applied to predictive analysis of recurrence and personalization of medical treatment for patients with breast and lung carcinoma</title><link>https://alexandrerays.github.io/publication/development-of-ai-applied-to-predictive-analysis-of-recurrence/</link><pubDate>Fri, 20 Dec 2024 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/publication/development-of-ai-applied-to-predictive-analysis-of-recurrence/</guid><description/></item><item><title>Data and AI in the International Remote Market</title><link>https://alexandrerays.github.io/talk/data-and-ai-in-the-international-remote-market/</link><pubDate>Tue, 03 Dec 2024 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/talk/data-and-ai-in-the-international-remote-market/</guid><description/></item><item><title>Data and AI in the International Remote Market</title><link>https://alexandrerays.github.io/talks/version-control/</link><pubDate>Tue, 03 Dec 2024 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/talks/version-control/</guid><description>&lt;h4 id="using-gitgithub-in-rstudio-----a-beginners-guide-to-version-control">Using Git/GitHub in RStudio &amp;mdash; A Beginner&amp;rsquo;s Guide to Version Control&lt;/h4>
&lt;h3 id="workshop-presented-at">Workshop presented at&lt;/h3>
&lt;p>&lt;i class="fa fa-check" aria-hidden="true" style="color:#BBDEFB">&lt;/i> Stanford Center for Open and Reproducible Science Spring Lecture Series&lt;br>
&lt;i class="fa fa-check" aria-hidden="true" style="color:#BBDEFB">&lt;/i> Stanford Data Science for Social Good Program (DSSG)&lt;/p></description></item><item><title>Assessing the Impact of Fog on Autonomous Vehicle Perception Systems</title><link>https://alexandrerays.github.io/talk/assessing-the-impact-of-fog-on-autonomous-vehicle-perception-systems/</link><pubDate>Thu, 28 Nov 2024 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/talk/assessing-the-impact-of-fog-on-autonomous-vehicle-perception-systems/</guid><description/></item><item><title>Assessing the Impact of Fog on Autonomous Vehicle Perception Systems</title><link>https://alexandrerays.github.io/publication/assessing-the-impact-of-fog-on-autonomous-vehicle-perception-systems/</link><pubDate>Thu, 28 Nov 2024 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/publication/assessing-the-impact-of-fog-on-autonomous-vehicle-perception-systems/</guid><description/></item><item><title>Revolutionizing Healthcare with Generative AI Opportunities and Challenges</title><link>https://alexandrerays.github.io/talk/revolutionizing-healthcare-with-generative-ai-opportunities-and-challenges/</link><pubDate>Wed, 12 Jun 2024 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/talk/revolutionizing-healthcare-with-generative-ai-opportunities-and-challenges/</guid><description/></item><item><title>How to create an object detection project from scratch to deploy?</title><link>https://alexandrerays.github.io/talk/how-to-create-an-object-detection-project-from-scratch-to-deploy/</link><pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/talk/how-to-create-an-object-detection-project-from-scratch-to-deploy/</guid><description/></item><item><title>How data analysis can leverage your company's results</title><link>https://alexandrerays.github.io/talk/how-data-analysis-can-leverage-your-companys-results/</link><pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/talk/how-data-analysis-can-leverage-your-companys-results/</guid><description/></item><item><title>222Academic conference posters using {posterdown}</title><link>https://alexandrerays.github.io/post/academic-conference-posters-using-posterdown/</link><pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/post/academic-conference-posters-using-posterdown/</guid><description>&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Table of Contents&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#motivation">Motivation&lt;/a>&lt;/li>
&lt;li>&lt;a href="#step-1-install-posterdown">Step 1: Install {posterdown}&lt;/a>&lt;/li>
&lt;li>&lt;a href="#step-2-open-a-posterdown-template">Step 2: Open a posterdown template&lt;/a>&lt;/li>
&lt;li>&lt;a href="#step-3-personalize-">Step 3: Personalize ✨&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#icons">Icons&lt;/a>&lt;/li>
&lt;li>&lt;a href="#css">CSS&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#step-4-share-">Step 4: Share 📡&lt;/a>&lt;/li>
&lt;li>&lt;a href="#acknowledgements-">Acknowledgements 🙏🏼&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>If you know me, you know I like using &lt;i class="fab fa-r-project" aria-hidden="true" style="color:#BBDEFB">&lt;/i> for just about anything. When it was time to create my first academic conference poster, I knew I didn&amp;rsquo;t want to waste any time moving between different software environments or copy-pasting and manually formatting text, tables, figures, and results.&lt;/p>
&lt;p>Instead, I wanted to generate a fully reproducible and nicely formatted conference poster using R Markdown. Turns out; the R package &lt;a href="https://github.com/brentthorne/posterdown" target="_blank" rel="noopener">&lt;strong>{posterdown}&lt;/strong>&lt;/a> makes this quite simple! In this post, I&amp;rsquo;ll briefly show you how to create your own poster using the posterdown package.&lt;/p>
&lt;p>For a sneak peek of what you can do with posterdown, you can &lt;a href="https://sjdm.org/presentations/2021-Poster-Alzahawi-Shilaan-crowds-variability-credibility~.pdf" target="_blank" rel="noopener">&lt;strong>find my first posterdown creation here&lt;/strong>&lt;/a> and the &lt;a href="https://github.com/shilaan/Many-Analysts/blob/main/poster/GSPA_Poster.Rmd" target="_blank" rel="noopener">&lt;strong>underlying code here&lt;/strong>&lt;/a>.&lt;/p>
&lt;h2 id="step-1-install-posterdown">Step 1: Install {posterdown}&lt;/h2>
&lt;p>First, we&amp;rsquo;ll install the posterdown package.&lt;/p>
&lt;pre>&lt;code class="language-r">install.packages(&amp;quot;posterdown&amp;quot;)
&lt;/code>&lt;/pre>
&lt;p>After you&amp;rsquo;ve successfully installed posterdown, restart R.&lt;/p>
&lt;h2 id="step-2-open-a-posterdown-template">Step 2: Open a posterdown template&lt;/h2>
&lt;p>After you&amp;rsquo;ve installed posterdown and restarted R, you should now be able to find a few new templates in your RStudio. Navigate to&lt;br>
&lt;code>File &amp;gt; New File &amp;gt; R Markdown ... &amp;gt; From Template&lt;/code>&lt;br>
and select any of the posterdown templates.&lt;/p>
&lt;details class="spoiler " id="spoiler-1">
&lt;summary>Click to view screenshot&lt;/summary>
&lt;p>&lt;img src="navigate.png" alt="">&lt;/p>
&lt;/details>
&lt;p>There are three options available: Posterdown HTML, Posterdown Betterland, and Posterdown Betterport.&lt;/p>
&lt;p>&lt;img src="templates.png" alt="">&lt;/p>
&lt;p>While the HTML template looks more like a classic scientific poster, the Betterland and Betterport templates create a poster with a large amount of space dedicated to a main take-away message. The difference between the latter two is that Better&lt;em>land&lt;/em> is &lt;em>landscape&lt;/em>-oriented, while Better&lt;em>port&lt;/em> is &lt;em>portrait&lt;/em>-oriented.&lt;/p>
&lt;p>You can find more about the different templates at the &lt;a href="https://github.com/brentthorne/posterdown/wiki" target="_blank" rel="noopener">&lt;strong>posterdown wiki&lt;/strong>&lt;/a>.&lt;/p>
&lt;h2 id="step-3-personalize-">Step 3: Personalize ✨&lt;/h2>
&lt;p>After you&amp;rsquo;ve selected a template (I&amp;rsquo;ve gone with Posterdown HTML), you can simply 🧶 knit 🧶 it to see what the generated html document looks like. Next, you can personalize the poster to your liking, starting with the &lt;code>yaml&lt;/code> at the top of the document (i.e., all the metadata specified between &lt;code>---&lt;/code>, such as &lt;code>title&lt;/code> and &lt;code>author&lt;/code>).&lt;/p>
&lt;p>The posterdown package allows for quite a bit of customization. For example, you can set the dimensions of your poster using &lt;code>poster_height&lt;/code> and &lt;code>poster_width&lt;/code>; set fonts for the text and title of the poster using &lt;code>font_family&lt;/code> and &lt;code>titletext_fontfamily&lt;/code>; and you can set colors using &lt;code>primary_colour&lt;/code>, &lt;code>secondary_colour&lt;/code>, and &lt;code>accent_colour&lt;/code>. For a comprehensive list of the &lt;code>yaml&lt;/code> options, &lt;a href="https://github.com/brentthorne/posterdown/wiki/posterdown_html" target="_blank" rel="noopener">&lt;strong>check out the Wiki of your chosen template&lt;/strong>&lt;/a>.&lt;/p>
&lt;h3 id="icons">Icons&lt;/h3>
&lt;p>Since we&amp;rsquo;re using R Markdown to create our poster, we can use any R package to further customize it. For example, I really like to use icons, so I used the &lt;code>icons&lt;/code> package for this. First, I installed and loaded the icons package.&lt;/p>
&lt;pre>&lt;code class="language-r">remotes::install_github(&amp;quot;mitchelloharawild/icons&amp;quot;) #install icons package
library(icons) #load icons package
&lt;/code>&lt;/pre>
&lt;p>Next, you can write inline code (code between single back ticks) to customize your poster with icons. For example,&lt;/p>
&lt;pre>&lt;code>`r icons::fontawesome(&amp;quot;github&amp;quot;)`
&lt;/code>&lt;/pre>
&lt;p>will create an inline github icon:&lt;br>
&lt;svg viewBox="0 0 496 512" style="height:1em;position:relative;display:inline-block;top:.1em;" xmlns="http://www.w3.org/2000/svg"> &lt;path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z">&lt;/path>&lt;/svg>&lt;/p>
&lt;p>If you&amp;rsquo;d like to further customize your icons, you can wrap the code above with the &lt;code>icon_style()&lt;/code> function and pass additional comma-separated arguments, such as &lt;code>scale&lt;/code> and &lt;code>fill&lt;/code> to set the size and color of the icon.&lt;br>
For example,&lt;/p>
&lt;pre>&lt;code>`r icon_style(icons::academicons(&amp;quot;osf&amp;quot;), scale = 2, fill = &amp;quot;#BBDEFB&amp;quot;)`
&lt;/code>&lt;/pre>
&lt;p>will create a larger OSF icon in blue:&lt;br>
&lt;svg viewBox="0 0 512 512" style="position:relative;display:inline-block;top:.1em;fill:#BBDEFB;height:2em;" xmlns="http://www.w3.org/2000/svg"> &lt;g label="icon" id="layer6" groupmode="layer"> &lt;path id="path2" d="m 255.9997,7.9999987 c -34.36057,0 -62.21509,27.8545563 -62.21509,62.2151643 0,20.303056 9.87066,38.160947 24.91769,49.517247 0.18814,-20.457899 16.79601,-36.993393 37.29685,-36.993393 20.50082,0 37.11091,16.535494 37.29909,36.993393 15.04533,-11.3563 24.9177,-29.212506 24.9177,-49.517247 C 318.21272,35.854555 290.35915,7.9999987 255.99915,7.9999987 Z M 293.29654,392.2676 c -0.18814,20.4601 -16.79601,36.99338 -37.29684,36.99338 -20.50082,0 -37.10922,-16.53551 -37.29684,-36.99338 -15.04759,11.35627 -24.91769,29.21246 -24.91769,49.51722 0,34.36059 27.85453,62.21518 62.2151,62.21518 34.36056,0 62.21508,-27.85459 62.21508,-62.21518 0,-20.30306 -9.87066,-38.16095 -24.91767,-49.51722 z M 441.78489,193.78484 c -20.30301,0 -38.16309,9.87068 -49.51717,24.91769 20.45786,0.18819 36.99333,16.79605 36.99333,37.29689 0,20.50085 -16.53547,37.11096 -36.9911,37.29916 11.35634,15.04533 29.21249,24.91769 49.51721,24.91769 C 476.14549,318.21327 504,290.35948 504,255.99942 504,221.6394 476.14549,193.78425 441.78489,193.78425 Z M 82.738898,255.99997 c 0,-20.50139 16.535509,-37.11096 36.993392,-37.29689 -11.35632,-15.04756 -29.214164,-24.91769 -49.517197,-24.91769 -34.36057,0 -62.2150945,27.85455 -62.2150945,62.21517 0,34.3606 27.8545245,62.21516 62.2150945,62.21516 20.303033,0 38.160877,-9.87068 49.517197,-24.91773 -20.457883,-0.18818 -36.993391,-16.796 -36.993391,-37.29688 z M 431.3627,80.636814 c -24.29549,-24.295544 -63.68834,-24.295544 -87.9844,0 -14.35704,14.357057 -20.00298,33.963346 -17.39331,52.633806 -0.0824,0.0809 -0.18198,0.13437 -0.26434,0.21491 -14.578,14.57799 -14.578,38.21689 0,52.79488 14.57797,14.57799 38.21681,14.57799 52.79484,0 0.0824,-0.0824 0.13455,-0.18198 0.21732,-0.26434 18.66819,2.60796 38.27445,-3.03799 52.63151,-17.39336 24.29378,-24.29778 24.29378,-63.68837 -0.003,-87.986153 z M 186.2806,378.51178 c 14.57798,-14.57799 14.57798,-38.21461 0,-52.79319 -14.57798,-14.57853 -38.21683,-14.57798 -52.79481,0 -0.0825,0.0824 -0.13448,0.18199 -0.21476,0.26215 -18.67046,-2.60795 -38.276723,3.03572 -52.63376,17.39505 -24.297753,24.29552 -24.297753,63.6884 0,87.98449 24.29551,24.29552 63.68833,24.29552 87.98439,0 14.35702,-14.35703 20.00297,-33.96333 17.39333,-52.63386 0.0848,-0.0786 0.18364,-0.13228 0.26672,-0.21505 z m 0,-245.02583 c -0.0826,-0.0824 -0.18198,-0.13436 -0.26445,-0.21494 2.60795,-18.66823 -3.038,-38.27452 -17.39332,-52.633811 -24.29777,-24.295544 -63.68832,-24.295544 -87.984405,0 -24.297747,24.297781 -24.297747,63.688381 0,87.986151 14.357042,14.35706 33.963315,20.00301 52.631515,17.39336 0.0808,0.0824 0.13447,0.18199 0.21475,0.26434 14.57799,14.57799 38.21684,14.57799 52.79482,0 14.57797,-14.57802 14.57797,-38.21689 0,-52.79488 z m 245.0821,209.89048 c -14.35703,-14.35703 -33.96329,-20.00301 -52.63378,-17.39505 -0.0809,-0.0824 -0.13228,-0.18199 -0.21506,-0.26215 -14.57797,-14.57799 -38.21685,-14.57799 -52.79482,0 -14.57797,14.57799 -14.57797,38.21461 0,52.79316 0.0827,0.0828 0.18198,0.13455 0.26434,0.21505 -2.60796,18.67053 3.03802,38.27683 17.39334,52.63386 24.29552,24.29552 63.68834,24.29552 87.98439,0 24.29775,-24.29552 24.29775,-63.68841 0.003,-87.98451 z" style="stroke-width:0.07717">&lt;/path> &lt;/g>&lt;/svg>&lt;/p>
&lt;h3 id="css">CSS&lt;/h3>
&lt;p>If you&amp;rsquo;re like me, you might want to customize your poster even more. In that case, posterdown allows you to pass a &lt;code>css&lt;/code> file with further customizations. For example, as you may have noticed from spending more than 5 seconds on my website, &lt;a href="https://www.colorhexa.com/035aa6" target="_blank" rel="noopener">&lt;strong>I really like this color&lt;/strong>&lt;/a>. I wanted all my bold text to show up in this color, so I did the following two things:&lt;/p>
&lt;h4 id="create-a-css-file-with-further-customizations">Create a css file with further customizations&lt;/h4>
&lt;p>First, I created a &lt;code>style.css&lt;/code> file in my working directory (i.e., the place where my &lt;code>.Rmd&lt;/code> is located). In this css file, I specified my preferred color for bold text:&lt;/p>
&lt;pre>&lt;code class="language-css">:root {
--text-bold-color: #BBDEFB;
}
strong {
font-weight: bold;
color: var(--text-bold-color);
}
&lt;/code>&lt;/pre>
&lt;h4 id="reference-the-css-file-in-the-yaml">Reference the css file in the &lt;code>yaml&lt;/code>&lt;/h4>
&lt;p>After creating my &lt;code>style.css&lt;/code> file in the working directory, I referenced it in the metadata of my &lt;code>Rmd&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-yaml">output:
posterdown::posterdown_html:
self_contained: true
css: style.css
&lt;/code>&lt;/pre>
&lt;p>Et voilà! My bolded text is now in &lt;a href="https://www.colorhexa.com/035aa6" target="_blank" rel="noopener">&lt;strong>my favorite shade of blue&lt;/strong>&lt;/a>.&lt;/p>
&lt;h2 id="step-4-share-">Step 4: Share 📡&lt;/h2>
&lt;p>You will likely want to share your poster with an external audience; to do so, it helps to create a self-contained document by setting &lt;code>self_contained: true&lt;/code> under &lt;code>output&lt;/code>. In addition, I knew that I wanted to automatically generate a PDF for sharing, so I added the following line to my &lt;code>yaml&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-yaml">knit: pagedown::chrome_print
&lt;/code>&lt;/pre>
&lt;p>And that&amp;rsquo;s it!&lt;/p>
&lt;p>&lt;img src="all.png" alt="">&lt;/p>
&lt;h2 id="acknowledgements-">Acknowledgements 🙏🏼&lt;/h2>
&lt;p>❤︎ The posterdown package was developed by &lt;a href="https://twitter.com/wbrentthorne" target="_blank" rel="noopener">&lt;strong>Brent Thorne&lt;/strong>&lt;/a>&lt;br>
❤︎ The icons package was developed by &lt;a href="https://blog.mitchelloharawild.com" target="_blank" rel="noopener">&lt;strong>Mitchell O&amp;rsquo;Hara-Wild&lt;/strong>&lt;/a>&lt;/p>
&lt;p>I hope this was helpful! Feel free to &lt;a href="https://twitter.com/shilaan01/status/1560734307450101760" target="_blank" rel="noopener">&lt;strong>leave a comment&lt;/strong>
&lt;i class="fab fa-twitter pr-1 fa-fw">&lt;/i>&lt;/a>&lt;/p></description></item><item><title>Academic conference posters using {posterdown}</title><link>https://alexandrerays.github.io/post/academic-conference-posters-using-posterdown/</link><pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/post/academic-conference-posters-using-posterdown/</guid><description>&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Table of Contents&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#motivation">Motivation&lt;/a>&lt;/li>
&lt;li>&lt;a href="#step-1-install-posterdown">Step 1: Install {posterdown}&lt;/a>&lt;/li>
&lt;li>&lt;a href="#step-2-open-a-posterdown-template">Step 2: Open a posterdown template&lt;/a>&lt;/li>
&lt;li>&lt;a href="#step-3-personalize-">Step 3: Personalize ✨&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#icons">Icons&lt;/a>&lt;/li>
&lt;li>&lt;a href="#css">CSS&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#step-4-share-">Step 4: Share 📡&lt;/a>&lt;/li>
&lt;li>&lt;a href="#acknowledgements-">Acknowledgements 🙏🏼&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>If you know me, you know I like using &lt;i class="fab fa-r-project" aria-hidden="true" style="color:#BBDEFB">&lt;/i> for just about anything. When it was time to create my first academic conference poster, I knew I didn&amp;rsquo;t want to waste any time moving between different software environments or copy-pasting and manually formatting text, tables, figures, and results.&lt;/p>
&lt;p>Instead, I wanted to generate a fully reproducible and nicely formatted conference poster using R Markdown. Turns out; the R package &lt;a href="https://github.com/brentthorne/posterdown" target="_blank" rel="noopener">&lt;strong>{posterdown}&lt;/strong>&lt;/a> makes this quite simple! In this post, I&amp;rsquo;ll briefly show you how to create your own poster using the posterdown package.&lt;/p>
&lt;p>For a sneak peek of what you can do with posterdown, you can &lt;a href="https://sjdm.org/presentations/2021-Poster-Alzahawi-Shilaan-crowds-variability-credibility~.pdf" target="_blank" rel="noopener">&lt;strong>find my first posterdown creation here&lt;/strong>&lt;/a> and the &lt;a href="https://github.com/shilaan/Many-Analysts/blob/main/poster/GSPA_Poster.Rmd" target="_blank" rel="noopener">&lt;strong>underlying code here&lt;/strong>&lt;/a>.&lt;/p>
&lt;h2 id="step-1-install-posterdown">Step 1: Install {posterdown}&lt;/h2>
&lt;p>First, we&amp;rsquo;ll install the posterdown package.&lt;/p>
&lt;pre>&lt;code class="language-r">install.packages(&amp;quot;posterdown&amp;quot;)
&lt;/code>&lt;/pre>
&lt;p>After you&amp;rsquo;ve successfully installed posterdown, restart R.&lt;/p>
&lt;h2 id="step-2-open-a-posterdown-template">Step 2: Open a posterdown template&lt;/h2>
&lt;p>After you&amp;rsquo;ve installed posterdown and restarted R, you should now be able to find a few new templates in your RStudio. Navigate to&lt;br>
&lt;code>File &amp;gt; New File &amp;gt; R Markdown ... &amp;gt; From Template&lt;/code>&lt;br>
and select any of the posterdown templates.&lt;/p>
&lt;details class="spoiler " id="spoiler-1">
&lt;summary>Click to view screenshot&lt;/summary>
&lt;p>&lt;img src="navigate.png" alt="">&lt;/p>
&lt;/details>
&lt;p>There are three options available: Posterdown HTML, Posterdown Betterland, and Posterdown Betterport.&lt;/p>
&lt;p>&lt;img src="templates.png" alt="">&lt;/p>
&lt;p>While the HTML template looks more like a classic scientific poster, the Betterland and Betterport templates create a poster with a large amount of space dedicated to a main take-away message. The difference between the latter two is that Better&lt;em>land&lt;/em> is &lt;em>landscape&lt;/em>-oriented, while Better&lt;em>port&lt;/em> is &lt;em>portrait&lt;/em>-oriented.&lt;/p>
&lt;p>You can find more about the different templates at the &lt;a href="https://github.com/brentthorne/posterdown/wiki" target="_blank" rel="noopener">&lt;strong>posterdown wiki&lt;/strong>&lt;/a>.&lt;/p>
&lt;h2 id="step-3-personalize-">Step 3: Personalize ✨&lt;/h2>
&lt;p>After you&amp;rsquo;ve selected a template (I&amp;rsquo;ve gone with Posterdown HTML), you can simply 🧶 knit 🧶 it to see what the generated html document looks like. Next, you can personalize the poster to your liking, starting with the &lt;code>yaml&lt;/code> at the top of the document (i.e., all the metadata specified between &lt;code>---&lt;/code>, such as &lt;code>title&lt;/code> and &lt;code>author&lt;/code>).&lt;/p>
&lt;p>The posterdown package allows for quite a bit of customization. For example, you can set the dimensions of your poster using &lt;code>poster_height&lt;/code> and &lt;code>poster_width&lt;/code>; set fonts for the text and title of the poster using &lt;code>font_family&lt;/code> and &lt;code>titletext_fontfamily&lt;/code>; and you can set colors using &lt;code>primary_colour&lt;/code>, &lt;code>secondary_colour&lt;/code>, and &lt;code>accent_colour&lt;/code>. For a comprehensive list of the &lt;code>yaml&lt;/code> options, &lt;a href="https://github.com/brentthorne/posterdown/wiki/posterdown_html" target="_blank" rel="noopener">&lt;strong>check out the Wiki of your chosen template&lt;/strong>&lt;/a>.&lt;/p>
&lt;h3 id="icons">Icons&lt;/h3>
&lt;p>Since we&amp;rsquo;re using R Markdown to create our poster, we can use any R package to further customize it. For example, I really like to use icons, so I used the &lt;code>icons&lt;/code> package for this. First, I installed and loaded the icons package.&lt;/p>
&lt;pre>&lt;code class="language-r">remotes::install_github(&amp;quot;mitchelloharawild/icons&amp;quot;) #install icons package
library(icons) #load icons package
&lt;/code>&lt;/pre>
&lt;p>Next, you can write inline code (code between single back ticks) to customize your poster with icons. For example,&lt;/p>
&lt;pre>&lt;code>`r icons::fontawesome(&amp;quot;github&amp;quot;)`
&lt;/code>&lt;/pre>
&lt;p>will create an inline github icon:&lt;br>
&lt;svg viewBox="0 0 496 512" style="height:1em;position:relative;display:inline-block;top:.1em;" xmlns="http://www.w3.org/2000/svg"> &lt;path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z">&lt;/path>&lt;/svg>&lt;/p>
&lt;p>If you&amp;rsquo;d like to further customize your icons, you can wrap the code above with the &lt;code>icon_style()&lt;/code> function and pass additional comma-separated arguments, such as &lt;code>scale&lt;/code> and &lt;code>fill&lt;/code> to set the size and color of the icon.&lt;br>
For example,&lt;/p>
&lt;pre>&lt;code>`r icon_style(icons::academicons(&amp;quot;osf&amp;quot;), scale = 2, fill = &amp;quot;#BBDEFB&amp;quot;)`
&lt;/code>&lt;/pre>
&lt;p>will create a larger OSF icon in blue:&lt;br>
&lt;svg viewBox="0 0 512 512" style="position:relative;display:inline-block;top:.1em;fill:#BBDEFB;height:2em;" xmlns="http://www.w3.org/2000/svg"> &lt;g label="icon" id="layer6" groupmode="layer"> &lt;path id="path2" d="m 255.9997,7.9999987 c -34.36057,0 -62.21509,27.8545563 -62.21509,62.2151643 0,20.303056 9.87066,38.160947 24.91769,49.517247 0.18814,-20.457899 16.79601,-36.993393 37.29685,-36.993393 20.50082,0 37.11091,16.535494 37.29909,36.993393 15.04533,-11.3563 24.9177,-29.212506 24.9177,-49.517247 C 318.21272,35.854555 290.35915,7.9999987 255.99915,7.9999987 Z M 293.29654,392.2676 c -0.18814,20.4601 -16.79601,36.99338 -37.29684,36.99338 -20.50082,0 -37.10922,-16.53551 -37.29684,-36.99338 -15.04759,11.35627 -24.91769,29.21246 -24.91769,49.51722 0,34.36059 27.85453,62.21518 62.2151,62.21518 34.36056,0 62.21508,-27.85459 62.21508,-62.21518 0,-20.30306 -9.87066,-38.16095 -24.91767,-49.51722 z M 441.78489,193.78484 c -20.30301,0 -38.16309,9.87068 -49.51717,24.91769 20.45786,0.18819 36.99333,16.79605 36.99333,37.29689 0,20.50085 -16.53547,37.11096 -36.9911,37.29916 11.35634,15.04533 29.21249,24.91769 49.51721,24.91769 C 476.14549,318.21327 504,290.35948 504,255.99942 504,221.6394 476.14549,193.78425 441.78489,193.78425 Z M 82.738898,255.99997 c 0,-20.50139 16.535509,-37.11096 36.993392,-37.29689 -11.35632,-15.04756 -29.214164,-24.91769 -49.517197,-24.91769 -34.36057,0 -62.2150945,27.85455 -62.2150945,62.21517 0,34.3606 27.8545245,62.21516 62.2150945,62.21516 20.303033,0 38.160877,-9.87068 49.517197,-24.91773 -20.457883,-0.18818 -36.993391,-16.796 -36.993391,-37.29688 z M 431.3627,80.636814 c -24.29549,-24.295544 -63.68834,-24.295544 -87.9844,0 -14.35704,14.357057 -20.00298,33.963346 -17.39331,52.633806 -0.0824,0.0809 -0.18198,0.13437 -0.26434,0.21491 -14.578,14.57799 -14.578,38.21689 0,52.79488 14.57797,14.57799 38.21681,14.57799 52.79484,0 0.0824,-0.0824 0.13455,-0.18198 0.21732,-0.26434 18.66819,2.60796 38.27445,-3.03799 52.63151,-17.39336 24.29378,-24.29778 24.29378,-63.68837 -0.003,-87.986153 z M 186.2806,378.51178 c 14.57798,-14.57799 14.57798,-38.21461 0,-52.79319 -14.57798,-14.57853 -38.21683,-14.57798 -52.79481,0 -0.0825,0.0824 -0.13448,0.18199 -0.21476,0.26215 -18.67046,-2.60795 -38.276723,3.03572 -52.63376,17.39505 -24.297753,24.29552 -24.297753,63.6884 0,87.98449 24.29551,24.29552 63.68833,24.29552 87.98439,0 14.35702,-14.35703 20.00297,-33.96333 17.39333,-52.63386 0.0848,-0.0786 0.18364,-0.13228 0.26672,-0.21505 z m 0,-245.02583 c -0.0826,-0.0824 -0.18198,-0.13436 -0.26445,-0.21494 2.60795,-18.66823 -3.038,-38.27452 -17.39332,-52.633811 -24.29777,-24.295544 -63.68832,-24.295544 -87.984405,0 -24.297747,24.297781 -24.297747,63.688381 0,87.986151 14.357042,14.35706 33.963315,20.00301 52.631515,17.39336 0.0808,0.0824 0.13447,0.18199 0.21475,0.26434 14.57799,14.57799 38.21684,14.57799 52.79482,0 14.57797,-14.57802 14.57797,-38.21689 0,-52.79488 z m 245.0821,209.89048 c -14.35703,-14.35703 -33.96329,-20.00301 -52.63378,-17.39505 -0.0809,-0.0824 -0.13228,-0.18199 -0.21506,-0.26215 -14.57797,-14.57799 -38.21685,-14.57799 -52.79482,0 -14.57797,14.57799 -14.57797,38.21461 0,52.79316 0.0827,0.0828 0.18198,0.13455 0.26434,0.21505 -2.60796,18.67053 3.03802,38.27683 17.39334,52.63386 24.29552,24.29552 63.68834,24.29552 87.98439,0 24.29775,-24.29552 24.29775,-63.68841 0.003,-87.98451 z" style="stroke-width:0.07717">&lt;/path> &lt;/g>&lt;/svg>&lt;/p>
&lt;h3 id="css">CSS&lt;/h3>
&lt;p>If you&amp;rsquo;re like me, you might want to customize your poster even more. In that case, posterdown allows you to pass a &lt;code>css&lt;/code> file with further customizations. For example, as you may have noticed from spending more than 5 seconds on my website, &lt;a href="https://www.colorhexa.com/035aa6" target="_blank" rel="noopener">&lt;strong>I really like this color&lt;/strong>&lt;/a>. I wanted all my bold text to show up in this color, so I did the following two things:&lt;/p>
&lt;h4 id="create-a-css-file-with-further-customizations">Create a css file with further customizations&lt;/h4>
&lt;p>First, I created a &lt;code>style.css&lt;/code> file in my working directory (i.e., the place where my &lt;code>.Rmd&lt;/code> is located). In this css file, I specified my preferred color for bold text:&lt;/p>
&lt;pre>&lt;code class="language-css">:root {
--text-bold-color: #BBDEFB;
}
strong {
font-weight: bold;
color: var(--text-bold-color);
}
&lt;/code>&lt;/pre>
&lt;h4 id="reference-the-css-file-in-the-yaml">Reference the css file in the &lt;code>yaml&lt;/code>&lt;/h4>
&lt;p>After creating my &lt;code>style.css&lt;/code> file in the working directory, I referenced it in the metadata of my &lt;code>Rmd&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-yaml">output:
posterdown::posterdown_html:
self_contained: true
css: style.css
&lt;/code>&lt;/pre>
&lt;p>Et voilà! My bolded text is now in &lt;a href="https://www.colorhexa.com/035aa6" target="_blank" rel="noopener">&lt;strong>my favorite shade of blue&lt;/strong>&lt;/a>.&lt;/p>
&lt;h2 id="step-4-share-">Step 4: Share 📡&lt;/h2>
&lt;p>You will likely want to share your poster with an external audience; to do so, it helps to create a self-contained document by setting &lt;code>self_contained: true&lt;/code> under &lt;code>output&lt;/code>. In addition, I knew that I wanted to automatically generate a PDF for sharing, so I added the following line to my &lt;code>yaml&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-yaml">knit: pagedown::chrome_print
&lt;/code>&lt;/pre>
&lt;p>And that&amp;rsquo;s it!&lt;/p>
&lt;p>&lt;img src="all.png" alt="">&lt;/p>
&lt;h2 id="acknowledgements-">Acknowledgements 🙏🏼&lt;/h2>
&lt;p>❤︎ The posterdown package was developed by &lt;a href="https://twitter.com/wbrentthorne" target="_blank" rel="noopener">&lt;strong>Brent Thorne&lt;/strong>&lt;/a>&lt;br>
❤︎ The icons package was developed by &lt;a href="https://blog.mitchelloharawild.com" target="_blank" rel="noopener">&lt;strong>Mitchell O&amp;rsquo;Hara-Wild&lt;/strong>&lt;/a>&lt;/p>
&lt;p>I hope this was helpful! Feel free to &lt;a href="https://twitter.com/shilaan01/status/1560734307450101760" target="_blank" rel="noopener">&lt;strong>leave a comment&lt;/strong>
&lt;i class="fab fa-twitter pr-1 fa-fw">&lt;/i>&lt;/a>&lt;/p></description></item><item><title>Reproducible reporting with R Markdown</title><link>https://alexandrerays.github.io/talks/reporting/</link><pubDate>Tue, 24 May 2022 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/talks/reporting/</guid><description>&lt;h4 id="writing-executable-and-fully-reproducible-apa-manuscripts-in-r">Writing executable and fully reproducible (APA) manuscripts in R&lt;/h4>
&lt;h3 id="workshop-presented-at">Workshop presented at&lt;/h3>
&lt;p>&lt;i class="fa fa-check" aria-hidden="true" style="color:#BBDEFB">&lt;/i> University of Amsterdam Lecture Series on Good Research Practices&lt;br>
&lt;i class="fa fa-check" aria-hidden="true" style="color:#BBDEFB">&lt;/i> Stanford Center for Open and Reproducible Science Fall Lecture Series&lt;br>
&lt;i class="fa fa-check" aria-hidden="true" style="color:#BBDEFB">&lt;/i> International Association for Conflict Management Annual Conference&lt;br>
&lt;i class="fa fa-check" aria-hidden="true" style="color:#BBDEFB">&lt;/i> Stanford Data Science for Social Good Program (DSSG)&lt;br>
&lt;i class="fa fa-check" aria-hidden="true" style="color:#BBDEFB">&lt;/i> Stanford Center for Open and Reproducible Science launch event&lt;/p>
&lt;h3 id="available-recordings">Available recordings&lt;/h3>
&lt;p>&lt;i class="fa fa-camera" aria-hidden="true" style="color:#BBDEFB">&lt;/i> &lt;a href="https://www.youtube.com/watch?v=LWcUjltWUNk" target="_blank" rel="noopener">&lt;strong>Stanford Center for Open and Reproducible Science&lt;/strong>&lt;/a>&lt;br>
&lt;i class="fa fa-camera-retro" aria-hidden="true" style="color:#BBDEFB">&lt;/i>
&lt;a href="https://www.youtube.com/watch?v=ZmpUrdNrXiU" target="_blank" rel="noopener">&lt;strong>International Association for Conflict Management&lt;/strong>&lt;/a>&lt;/p></description></item><item><title>The Sway and Credibility of Crowd Science</title><link>https://alexandrerays.github.io/talks/crowd-science/</link><pubDate>Tue, 24 May 2022 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/talks/crowd-science/</guid><description>&lt;h4 id="lay-perceptions-of-scientific-findings-swayed-by-the-crowd">Lay Perceptions of Scientific Findings: Swayed by the Crowd?&lt;/h4>
&lt;h3 id="talk-presented-at">Talk presented at&lt;/h3>
&lt;p>&lt;i class="fa fa-check" aria-hidden="true" style="color:#BBDEFB">&lt;/i>
Stanford Data Science&lt;br>
&lt;i class="fa fa-check" aria-hidden="true" style="color:#BBDEFB">&lt;/i>
The Meta- Research Innovation Center at Stanford (METRICS)&lt;br>
&lt;i class="fa fa-check" aria-hidden="true" style="color:#BBDEFB">&lt;/i> The Toronto Workshop on Reproducibility&lt;br>
&lt;i class="fa fa-check" aria-hidden="true" style="color:#BBDEFB">&lt;/i> Society for Social and Personality Psychology (SPSP) Annual Conference&lt;br>
&lt;i class="fa fa-check" aria-hidden="true" style="color:#BBDEFB">&lt;/i> The Psychological Science Accelerator Conference (PSACON)&lt;br>
&lt;i class="fa fa-check" aria-hidden="true" style="color:#BBDEFB">&lt;/i> The Rising Scholars Conference, Harvard Business School&lt;br>
&lt;i class="fa fa-check" aria-hidden="true" style="color:#BBDEFB">&lt;/i> Symposium on Efforts to Improve Psychological Science, TPA&lt;/p>
&lt;h3 id="available-recordings">Available recordings&lt;/h3>
&lt;p>&lt;i class="fa fa-camera" aria-hidden="true" style="color:#BBDEFB">&lt;/i> &lt;a href="https://stanford.zoom.us/rec/share/mLwfo-KvZjCvN01fcozmRp8UjN8d8eN0CmIzoIhnpzL960i6NXP5gynSGeU1cP1P.q5qoJ_KEaB8u9FvL?startTime=1646327040000" target="_blank" rel="noopener">&lt;strong>Metrics International Forum&lt;/strong>&lt;/a>&lt;br>
&lt;i class="fa fa-film" aria-hidden="true" style="color:#BBDEFB">&lt;/i>
&lt;a href="https://www.youtube.com/watch?v=jynbJjTI10o" target="_blank" rel="noopener">&lt;strong>Toronto Workshop on Reproducibility&lt;/strong>&lt;/a>&lt;br>
&lt;i class="fa fa-camera-retro" aria-hidden="true" style="color:#BBDEFB">&lt;/i> &lt;a href="https://stanford.zoom.us/rec/play/9FRF6N_-FIMm4rkUK4MuVWAl4vzcOBENsugJFEJZSD6vtrcW_MD-X3xd6zAbm_wltsKIkHc3XQ5nlFYS.AQ9qjRzo7Dc9V2xp?startTime=1634127778000&amp;amp;_x_zm_rtaid=DCJsVP0gRsqfVJD9N-qxSQ.1643142404846.77bac81f2154d1a25b3dee3e781d0c3a&amp;amp;_x_zm_rhtaid=196" target="_blank" rel="noopener">&lt;strong>Taiwan Psychological Association (TPA)&lt;/strong>&lt;/a>&lt;br>
&lt;i class="fa fa-headphones" aria-hidden="true" style="color:#BBDEFB">&lt;/i>
&lt;a href="https://stanford.zoom.us/rec/share/mmIh1DF4lE37oI3_1SdmfZkVbtSUSp89xFKKSr_5z0EitC9rMlY-dupXziHCszsY.1rNzL38JsVSnXMmH" target="_blank" rel="noopener">&lt;strong>SPSP Poster Pitch&lt;/strong>&lt;/a>&lt;br>
&lt;i class="fa fa-film" aria-hidden="true" style="color:#BBDEFB">&lt;/i> &lt;a href="https://www.youtube.com/watch?v=dQkSu5OSS1o" target="_blank" rel="noopener">&lt;strong>PSACON&lt;/strong>&lt;/a>&lt;/p></description></item><item><title>Round Table - The challenges of law in the face of predictive algorithms</title><link>https://alexandrerays.github.io/talk/round-table-the-challenges-of-law-in-the-face-of-predictive-algorithms/</link><pubDate>Tue, 09 Nov 2021 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/talk/round-table-the-challenges-of-law-in-the-face-of-predictive-algorithms/</guid><description/></item><item><title>Visualizing data with raincloud plots</title><link>https://alexandrerays.github.io/post/visualizing-data-with-raincloud-plots/</link><pubDate>Mon, 19 Jul 2021 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/post/visualizing-data-with-raincloud-plots/</guid><description>&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Table of Contents&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#motivation">Motivation&lt;/a>&lt;/li>
&lt;li>&lt;a href="#step-1-install-raincloudplots">Step 1: Install {raincloudplots}&lt;/a>&lt;/li>
&lt;li>&lt;a href="#step-2-simulate-some-data">Step 2: Simulate some data&lt;/a>&lt;/li>
&lt;li>&lt;a href="#step-3-initialize-the-data-format">Step 3: Initialize the data-format&lt;/a>&lt;/li>
&lt;li>&lt;a href="#step-4-make-it-rain-">Step 4: Make it rain! 🌧&lt;/a>&lt;/li>
&lt;li>&lt;a href="#acknowledgements">Acknowledgements&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>I love effective data visualization that combines the distribution of the data, individual data points, and summary statistics. I recently discovered a new tool for doing just this, with the R package &lt;a href="https://github.com/RainCloudPlots/RainCloudPlots" target="_blank" rel="noopener">{raincloudplots}&lt;/a>. The &amp;lsquo;rain&amp;rsquo; stands for the raw data, and the &amp;lsquo;cloud&amp;rsquo; stands for the data distribution. In this post, I showcase my first raincloud plot, and how to recreate it.&lt;/p>
&lt;h2 id="step-1-install-raincloudplots">Step 1: Install {raincloudplots}&lt;/h2>
&lt;p>First, we&amp;rsquo;ll install the raincloudplots package from GitHub and load it.&lt;/p>
&lt;pre>&lt;code class="language-r">if (!require(remotes)) {
install.packages(&amp;quot;remotes&amp;quot;)
}
remotes::install_github('jorvlan/raincloudplots')
library(raincloudplots)
&lt;/code>&lt;/pre>
&lt;h2 id="step-2-simulate-some-data">Step 2: Simulate some data&lt;/h2>
&lt;p>In one of my research projects, I&amp;rsquo;m planning to explore whether crowdsourced data analysis, also known as &lt;strong>multi-analyst&lt;/strong> studies &amp;mdash; giving the same dataset to different teams of scientists, who independently analyze it to answer the same research question &amp;mdash; can increase the sway and credibility of scientific research. That is, are the results of multi-analyst (vs. single-analyst) studies more likely to sway someone&amp;rsquo;s prior beliefs?&lt;/p>
&lt;details class="spoiler " id="spoiler-1">
&lt;summary>Give me some more background information on the data and research setting&lt;/summary>
&lt;p>&lt;p>Before reading the results of a scientific study, study participants will report their prior beliefs in a specific phenomenon on a scale of 0% (very unlikely) to 100% (very likely).&lt;/p>
&lt;pre>&lt;code class="language-mermaid">graph LR
A[Report &amp;lt;br&amp;gt; prior beliefs]
A ==&amp;gt;B[Read &amp;lt;br&amp;gt; single-analyst results]
A ==&amp;gt;C[Read consistent &amp;lt;br&amp;gt; multi-analyst results]
A ==&amp;gt;D[Read inconsistent &amp;lt;br&amp;gt; multi-analyst results]
E[Report &amp;lt;br&amp;gt; final beliefs]
B ==&amp;gt; E
C ==&amp;gt; E
D ==&amp;gt; E
style A fill:#f6d4d1,stroke:#333,stroke-width:4px
style B fill:#f6d4d1,stroke:#333,stroke-width:4px
style C fill:#f6d4d1,stroke:#333,stroke-width:4px
style D fill:#f6d4d1,stroke:#333,stroke-width:4px
style E fill:#f6d4d1,stroke:#333,stroke-width:4px
&lt;/code>&lt;/pre>
&lt;p>Afterwards, study participants will be randomly allocated to one of three groups: one group will read the results of a conventional, single-analyst study; one group will read the results of a multi-analyst study with consistent results; one group will read the results of a multi-analyst study with inconsistent result.&lt;/p>
&lt;p>After reading the study results, the study participants will again report their belief in the phenomenon on a scale of 0% (very unlikely) to 100% (very likely).&lt;/p>
&lt;/p>
&lt;/details>
&lt;p>Below, I simulate some data that are in line with the hypotheses we&amp;rsquo;re planning to preregister: we expect that, compared to single-analyst studies, multi-analyst studies with inconsistent, highly variable results will negatively affect prior beliefs (i.e., research consumers will be less likely to believe in the reported phenomenon), while multi-analyst studies with consistent, positive results will positively affect prior beliefs.&lt;/p>
&lt;details class="spoiler " id="spoiler-2">
&lt;summary>Give me some more information about the simulation&lt;/summary>
&lt;p>&lt;p>For the &lt;strong>prior beliefs&lt;/strong> of all three participant groups, we&amp;rsquo;ll make 500 random draws from a normal distribution with &lt;code>𝜇 = 65&lt;/code> and &lt;code>𝜎 = 5&lt;/code>.&lt;/p>
&lt;p>For the &lt;strong>final beliefs&lt;/strong> of participants reading a &lt;em>single-analyst&lt;/em> study, we&amp;rsquo;ll draw from a normal distribution with &lt;code>𝜇 = 72&lt;/code> and &lt;code>𝜎 = 6&lt;/code>. For the final beliefs of participants reading a &lt;em>multi-analyst study with consistent results&lt;/em>, we&amp;rsquo;ll draw from a normal distribution with &lt;code>𝜇 = 75&lt;/code> and &lt;code>𝜎 = 7&lt;/code>.&lt;/p>
&lt;p>For the remaining group (the &lt;em>inconsistent multi-analyst&lt;/em> condition), we&amp;rsquo;ll draw from a normal distribution with &lt;code>𝜇 = 55&lt;/code> and &lt;code>𝜎 = 9&lt;/code>. This reflects our hypothesis that beliefs in a phenomenon will decrease after observing a multi-analyst study with highly variable results.&lt;/p>
&lt;/p>
&lt;/details>
&lt;pre>&lt;code class="language-r">set.seed(3)
prior &amp;lt;- replicate(n = 3, rnorm(n = 500, mean = 65, sd = 5))
final_single &amp;lt;- rnorm(n = 500, mean = 72, sd = 6)
final_multi_consistent &amp;lt;- rnorm(n = 500, mean = 75, sd = 7)
final_multi_inconsistent &amp;lt;- rnorm(n = 500, mean = 55, sd = 9)
&lt;/code>&lt;/pre>
&lt;h2 id="step-3-initialize-the-data-format">Step 3: Initialize the data-format&lt;/h2>
&lt;p>For this step, you&amp;rsquo;ll need to choose between several possible designs that you can find &lt;a href="https://github.com/jorvlan/raincloudplots" target="_blank" rel="noopener">here&lt;/a>: e.g., a 1-by-1, 2-by-2, or 2-by-3 (repeated measures) raincloud. In my case, I have 3 different groups (the &lt;em>single-analyst&lt;/em> condition, the &lt;em>consistent multi-analyst&lt;/em> condition, and the &lt;em>inconsistent multi-analyst&lt;/em> condition) with 2 measures each (&lt;em>prior beliefs&lt;/em> and &lt;em>final beliefs&lt;/em>), so I&amp;rsquo;m creating a 2 x 3 raincloud.&lt;/p>
&lt;p>The {raincloudplot} function to set up the desired data format for a 2 x 3 raincloud is called &lt;code>data_2x2()&lt;/code>. (Confusing, I know). For other options and how to initialize them, check out &lt;a href="https://github.com/jorvlan/raincloudplots" target="_blank" rel="noopener">this page&lt;/a>.&lt;/p>
&lt;pre>&lt;code class="language-r">df_2x3 &amp;lt;- data_2x2(
array_1 = prior[,1],
array_2 = final_single,
array_3 = prior[,2],
array_4 = final_multi_consistent,
array_5 = prior[,3],
array_6 = final_multi_inconsistent,
labels = (c('Prior Beliefs','Final Beliefs')),
jit_distance = .09,
jit_seed = 321)
&lt;/code>&lt;/pre>
&lt;h2 id="step-4-make-it-rain-">Step 4: Make it rain! 🌧&lt;/h2>
&lt;p>Finally, we&amp;rsquo;ll use the &lt;code>raincloud_2x3_repmes()&lt;/code> function to create our 2x3 raincloud.&lt;/p>
&lt;pre>&lt;code class="language-r">colors &amp;lt;- rep(c(&amp;quot;dodgerblue&amp;quot;, &amp;quot;darkorange&amp;quot;), 3) #choose colors
raincloud_2x3_repmes(
data = df_2x3,
colors = colors,
fills = colors,
size = 1,
alpha = .6,
ort = &amp;quot;h&amp;quot;) + #set to v for vertical plot
scale_x_continuous(
breaks = c(1,2,3),
limits = c(0.8, 4.3),
labels = rep(&amp;quot;&amp;quot;, 3)) +
ylab(&amp;quot;Rated Beliefs&amp;quot;) +
annotate(geom = &amp;quot;text&amp;quot;,
label = &amp;quot;Single-Analyst&amp;quot;,
x = 1.5, y = 42) +
annotate(geom = &amp;quot;text&amp;quot;,
label = &amp;quot;Multi-Analyst: Consistent&amp;quot;,
x = 2.5, y = 38) +
annotate(geom = &amp;quot;text&amp;quot;,
label = &amp;quot;Multi-Analyst: Inconsistent&amp;quot;,
x = 3.9, y = 38) +
annotate(geom = &amp;quot;text&amp;quot;,
label = &amp;quot;Prior Beliefs&amp;quot;,
x = 4.2, y = 55, size = 5,
color = &amp;quot;dodgerblue&amp;quot;) +
annotate(geom = &amp;quot;text&amp;quot;,
label = &amp;quot;vs.&amp;quot;,
x = 4.2, y = 66, size = 5) +
annotate(geom = &amp;quot;text&amp;quot;,
label = &amp;quot;Final Beliefs&amp;quot;,
x = 4.2, y = 77, size = 5,
color = &amp;quot;darkorange&amp;quot;) +
theme_classic() +
theme(axis.ticks.y = element_blank(),
axis.text = element_text(size = 9),
axis.title.y = element_blank())
&lt;/code>&lt;/pre>
&lt;img src="https://alexandrerays.github.io/post/visualizing-data-with-raincloud-plots/index_files/figure-html/unnamed-chunk-4-1.png" width="672" />
&lt;p>And we&amp;rsquo;re done! For more options and information, feel free to check out &lt;a href="https://doi.org/10.12688/wellcomeopenres.15191.2" target="_blank" rel="noopener">the paper cited below&lt;/a>. A huge thank you to the {raincloudplots} package developers.❤︎&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements&lt;/h2>
&lt;p>Allen M, Poggiali D, Whitaker K et al. Raincloud plots: a multi-platform tool for robust data visualization [version 2; peer review: 2 approved]. Wellcome Open Res 2021, 4:63. DOI: &lt;a href="https://doi.org/10.12688/wellcomeopenres.15191.2" target="_blank" rel="noopener">10.12688/wellcomeopenres.15191.2&lt;/a>&lt;/p></description></item><item><title>Writing reproducible manuscripts in R</title><link>https://alexandrerays.github.io/post/writing-reproducible-manuscripts-in-r/</link><pubDate>Sun, 11 Jul 2021 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/post/writing-reproducible-manuscripts-in-r/</guid><description>&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Table of Contents&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#motivation">Motivation&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#a-reproducible-workflow">A reproducible workflow&lt;/a>&lt;/li>
&lt;li>&lt;a href="#the-result">The result&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#materials">Materials&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#acknowledgements">Acknowledgements&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>I recently gave a talk on writing reproducible manuscripts using R Markdown and the R package &lt;a href="https://github.com/crsh/papaja" target="_blank" rel="noopener">&lt;em>papaja&lt;/em>&lt;/a> (&lt;em>p&lt;/em>reparing &lt;em>apa j&lt;/em>ournal &lt;em>a&lt;/em>rticles). One of my main motivations for using R to write up my manuscripts is contained in a tweet by Pamela Jacobsen:&lt;/p>
&lt;center>
&lt;p>Why does so much of academia involve cutting and pasting information from one document to another document?&lt;/p>
&lt;p>&lt;em>Pamela Jacobsen (May 17, 2021)&lt;/em>&lt;/p>
&lt;/center>
&lt;h3 id="a-reproducible-workflow">A reproducible workflow&lt;/h3>
&lt;p>In the workshop, I go through methods that keep you from manually transcribing and/or copy pasting tables, figures, statistical output, and citations over and over again.&lt;/p>
&lt;p>Perhaps my favorite introduction to the idea of a &lt;a href="https://www.youtube.com/watch?v=s3JldKoA0zw" target="_blank" rel="noopener">&lt;strong>reproducible workflow&lt;/strong>&lt;/a> (and the horrors of a non-reproducible workflow) is given in this short YouTube video:&lt;/p>
&lt;center>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/s3JldKoA0zw" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;/center>
&lt;h4 id="benefits">Benefits&lt;/h4>
&lt;p>The video hints at some of the benefits of a reproducible workflow. A reproducible workflow is&amp;hellip;&lt;/p>
&lt;p>⚠️ Less error-prone&lt;br>
⏳ Less time-consuming&lt;br>
⇄ More dynamic&lt;br>
🔎 More transparent&lt;/p>
&lt;h3 id="the-result">The result&lt;/h3>
&lt;p>You can find a list of papers written with papaja &lt;a href="https://github.com/crsh/papaja#papers-written-with-papaja" target="_blank" rel="noopener">here&lt;/a>. Here&amp;rsquo;s a sneak peek of what&amp;rsquo;s happening behind the scenes, and the rendered result:&lt;br>
&lt;img src="manuscript.png" alt="">
&lt;img src="cites.png" alt="">&lt;/p>
&lt;h2 id="materials">Materials&lt;/h2>
&lt;p>If you want to learn more, you can &lt;a href="https://shilaan-apa.netlify.app" target="_blank" rel="noopener">find the slides here
&lt;i class="far fa-images pr-1 fa-fw">&lt;/i>&lt;/a>.&lt;/p>
&lt;p>If you have trouble loading the slides, you can browse through (and save) a static version of the slides below.&lt;/p>
&lt;p>💡 Pro tip: if you are on a mobile device, click on &lt;code>75%&lt;/code> in the toolbar to adjust the size of the slides to &lt;code>Zoom to: Page Width&lt;/code>.&lt;/p>
&lt;iframe src="https://onedrive.live.com/embed?cid=9D05BA28CB0393F3&amp;resid=9D05BA28CB0393F3%21711&amp;authkey=APVG1vgy5PxC238&amp;em=2" width="100%" height="540" frameborder="0" scrolling="no">&lt;/iframe>
&lt;p>If you&amp;rsquo;d like an example manuscript to work with, I&amp;rsquo;ve uploaded some materials to &lt;a href="https://osf.io/a8gqn/?view_only=a3ea3f76f667482bbc5a2d8a8ddc2aaf" target="_blank" rel="noopener">this OSF folder&lt;/a>.&lt;/p>
&lt;p>Feel free to &lt;a href="https://twitter.com/shilaan01/status/1413946789699325953" target="_blank" rel="noopener">
&lt;i class="fab fa-twitter pr-1 fa-fw">&lt;/i>leave a comment or a question&lt;/a>&lt;/p>
&lt;h3 id="acknowledgements">Acknowledgements&lt;/h3>
&lt;p>❤︎ Slides created with the R package &lt;a href="https://github.com/yihui/xaringan" target="_blank" rel="noopener">xaringan&lt;/a>&lt;br>
❤︎ papaja created by &lt;a href="http://frederikaust.com" target="_blank" rel="noopener">Frederik Aust&lt;/a>&lt;br>
❤︎ GIFs created by &lt;a href="https://www.pipinghotdata.com/posts/2020-09-07-introducing-the-rstudio-ide-and-r-markdown/" target="_blank" rel="noopener">Shannon Pileggi&lt;/a>&lt;br>
❤︎ Artwork created by &lt;a href="https://github.com/allisonhorst/stats-illustrations" target="_blank" rel="noopener">Allison Horst&lt;/a>&lt;/p></description></item><item><title>High Performance Computing at Stanford</title><link>https://alexandrerays.github.io/post/high-performance-computing-at-stanford/</link><pubDate>Sun, 23 May 2021 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/post/high-performance-computing-at-stanford/</guid><description>&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Table of Contents&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#step-1-setting-up-sherlock">Step 1: Setting up Sherlock&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#create-an-account">Create an account&lt;/a>&lt;/li>
&lt;li>&lt;a href="#set-up-ssh-connection">Set up SSH connection&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#step-2-setting-up-clusterjob">Step 2: Setting up ClusterJob&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#create-an-account-1">Create an account&lt;/a>&lt;/li>
&lt;li>&lt;a href="#install-clusterjob">Install ClusterJob&lt;/a>&lt;/li>
&lt;li>&lt;a href="#set-up-ssh-configuration">Set up SSH configuration&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#step-3-submit-your-first-job-">Step 3: Submit your first job ⚒︎&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#run-your-first-serial-computation">Run your first serial computation&lt;/a>&lt;/li>
&lt;li>&lt;a href="#run-your-first-parallel-computation">Run your first parallel computation&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#acknowledgements">Acknowledgements&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;p>In this tutorial, I&amp;rsquo;ll walk through the process of running a large computational experiment using two tools: &lt;a href="https://clusterjob.org" target="_blank" rel="noopener">ClusterJob&lt;/a> and &lt;a href="http://sherlock.stanford.edu" target="_blank" rel="noopener">Sherlock&lt;/a>. ClusterJob is an automation system for high-throughput reproducible computations, created by &lt;a href="https://datascience.stanford.edu/people/hatef-monajemi" target="_blank" rel="noopener">Hatef Monajemi&lt;/a> and &lt;a href="https://statistics.stanford.edu/people/david-donoho" target="_blank" rel="noopener">David L. Donoho&lt;/a>. Sherlock is Stanford&amp;rsquo;s High Performance Computing (HPC) cluster.&lt;/p>
&lt;p>You can also find &lt;a href="https://stats285shilaan.netlify.app/post/high-performance-computing-with-clusterjob-and-sherlock/" target="_blank" rel="noopener">an exact replica of this tutorial&lt;/a> on a &lt;a href="https://stats285shilaan.netlify.app" target="_blank" rel="noopener">separate website I created&lt;/a> for &lt;em>Statistics 285: Massive Computational Experiments, Painlessly&lt;/em>, a course taught at Stanford University in Spring 2021. Note that Sherlock is, unfortunately, only accessible to the Stanford community.&lt;/p>
&lt;p>My goal is to provide a relatively painless introduction to High Performance Computing at Stanford.&lt;/p>
&lt;h2 id="step-1-setting-up-sherlock">Step 1: Setting up Sherlock&lt;/h2>
&lt;h3 id="create-an-account">Create an account&lt;/h3>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://www.sherlock.stanford.edu" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">Request a Sherlock account&lt;/a>
&lt;/li>
&lt;/ul>
&lt;p>If you don&amp;rsquo;t already have a Sherlock account, now&amp;rsquo;s the time to request one. After creating an account, you&amp;rsquo;ll want to set up your access credentials using SSH keys, which allows for remote communication between your local machine and the cluster.&lt;/p>
&lt;h3 id="set-up-ssh-connection">Set up SSH connection&lt;/h3>
&lt;p>To set up your connection, check if you already have SSH keys on your machine. You can do this in two ways:&lt;br>
☞︎ Go to your home directory and navigate to the hidden&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> &lt;code>.ssh&lt;/code> folder&lt;br>
☞︎ Go to your terminal and enter &lt;code>ls -al ~/.ssh&lt;/code>&lt;/p>
&lt;p>If you see a &lt;code>.pub&lt;/code> file, you already have SSH keys set up. If you don&amp;rsquo;t, run the following in your terminal:&lt;/p>
&lt;pre>&lt;code>ssh-keygen -t rsa -C &amp;quot;your_email@example.com&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>Now, all you need to do is copy your keys over to the remote cluster.&lt;/p>
&lt;pre>&lt;code>ssh-copy-id your-username@sherlock.stanford.edu #run this in your terminal
&lt;/code>&lt;/pre>
&lt;p>Next, add the following to your &lt;code>~.ssh/config&lt;/code> file to avoid Two-Factor Authentication every time you access the cluster, either from your local machine or through ClusterJob.&lt;/p>
&lt;pre>&lt;code>Host sherlock sherlock?? sherlock.stanford.edu sherlock??.stanford.edu
ControlMaster auto
ControlPath ~/.ssh/%r@%h:%p
ControlPersist yes #this enables direct access to sherlock using your terminal
Host login.sherlock.stanford.edu
ControlMaster auto
ControlPath ~/.ssh/%l%r@%h:%p
ControlPersist yes #this enables access to sherlock using ClusterJob
&lt;/code>&lt;/pre>
&lt;details class="spoiler " id="spoiler-2">
&lt;summary>Show me how to edit my &lt;code>~.ssh/config&lt;/code> file&lt;/summary>
&lt;p>&lt;p>Editing your &lt;code>~.ssh/config&lt;/code> file can be done in two ways:&lt;br>
☞︎ Directly, by navigating to &lt;code>.ssh &amp;gt; config&lt;/code> from your home directory&lt;br>
☞︎ Through your terminal, by running:&lt;/p>
&lt;pre>&lt;code>cd ~/.ssh #change directory to the .ssh folder
open config
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details>
&lt;p>You can now check whether your connection works by trying to connect directly to the server. In your terminal, run:&lt;/p>
&lt;pre>&lt;code>ssh your-username@sherlock.stanford.edu
&lt;/code>&lt;/pre>
&lt;p>The first time you do this, you&amp;rsquo;ll likely get a warning like this:&lt;/p>
&lt;pre>&lt;code>The authenticity of host 'login.sherlock.stanford.edu' can't be established.
ECDSA key fingerprint is SHA256:eB0bODKdaCWtPgv0pYozsdC5ckfcBFVOxeMwrNKdkmg.
Are you sure you want to continue connecting (yes/no)?
&lt;/code>&lt;/pre>
&lt;p>Simply type &amp;lsquo;yes&amp;rsquo; and proceed. After completing these steps, your Sherlock account should be ready to go! 🎉&lt;/p>
&lt;h2 id="step-2-setting-up-clusterjob">Step 2: Setting up ClusterJob&lt;/h2>
&lt;h3 id="create-an-account-1">Create an account&lt;/h3>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://clusterjob.org/register.php" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">Create a ClusterJob account&lt;/a>
&lt;/li>
&lt;/ul>
&lt;p>Set up an account with ClusterJob using your &lt;code>@edu&lt;/code> email account. Take note of your chosen ClusterJob ID and the ClusterJob Key assigned to your account.&lt;/p>
&lt;h3 id="install-clusterjob">Install ClusterJob&lt;/h3>
&lt;p>In your terminal, run:&lt;/p>
&lt;pre>&lt;code>git clone https://github.com/monajemi/clusterjob.git ~/CJ_install #clones CJ from GitHub
sudo cpan -i Data::Dumper Data::UUID FindBin File::chdir File::Basename File::Spec IO::Socket::INET IO::Socket::SSL Getopt::Declare Term::ReadLine JSON::PP JSON::XS Digest::SHA Time::Local Time::Piece Moo HTTP::Thin HTTP::Request::Common JSON URI #installs perl dependencies
alias cj='perl ~/CJ_install/src/CJ.pl'; #builds an alias for CJ
&lt;/code>&lt;/pre>
&lt;h3 id="set-up-ssh-configuration">Set up SSH configuration&lt;/h3>
&lt;p>You just installed a &lt;code>CJ_install&lt;/code> folder to your home directory. In it, you will find two important files that you&amp;rsquo;ll need to edit: &lt;code>cj_config&lt;/code> and &lt;code>ssh_config&lt;/code>.&lt;/p>
&lt;p>In &lt;code>cj_config&lt;/code>, you&amp;rsquo;ll provide your ClusterJob ID (the username you chose) and the ClusterJob Key you received when creating your account.&lt;/p>
&lt;p>Copy the following into the &lt;code>cj_config&lt;/code> file:&lt;/p>
&lt;pre>&lt;code>CJID your-id #edit this
CJKEY
eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhZG1pbiI6MCwiZCI6eyJ1aWQiOiJzaGlsYWFuIiwiY2pwYXNzY29kZSI6IjJmYWQ2OWU1YjZlNDQxNDE2NjhhOTIxZThiMmNlNTYwIn19.P60piuQFOmzny9dFmwWoWDGeNrtsi6UHl_16OIdoICa-C6Y8KeGadT6pcMJvyKLlBs163rR_p1CXkm33l6L8fhH9tsJGG3UN4cMocWsVeWH_ORfZsdNvuWa24IO2Yh7MPMTj067e9UodDcOYe7N2swu9eWfvC82YBk7Ubna3ZDnHi4icK06exK1_mIj8jv0fDzHS4m0eWd5u0Sg1YecMp9YXU3DEc_l3Hxroyc_qnfVmK9WhiDTfAx6ZYoHxFF2VecWVsOB6-Pq6cjYKKw7BQIiLbQ0VLIZmwjX3QiQRTvi6vX4vsfwxHTvsNKGE_L2ru9NAfcuRigX1mgOCLBwU9g #edit this
SYNC_TYPE manual
SYNC_INTERVAL 300
&lt;/code>&lt;/pre>
&lt;div class="alert alert-warning">
&lt;div>
The &lt;code>cj_config&lt;/code> file is somehow very sensitive to spacing and line breaks. Make sure you add linebreaks, like in the example above, or you&amp;rsquo;ll get obscure error messages when running ClusterJob.
&lt;/div>
&lt;/div>
&lt;p>In &lt;code>ssh_config&lt;/code>, you&amp;rsquo;ll provide information about the Sherlock cluster. Copy the following into the &lt;code>ssh_config&lt;/code> file:&lt;/p>
&lt;pre>&lt;code>[sherlock2]
Host login.sherlock.stanford.edu
User your-username #edit this to your own username
Bqs SLURM
Repo /scratch/users/your-username/CJRepo_Remote #edit this
Python python/3.8.8
Pythonlib IPython:pandas:numpy:libgcc:scipy:matplotlib:cvxpy:-c conda-forge
Alloc --time 48:00:00 --mem 32G
R R/3.4.0
Rlib ggplot2
[sherlock2]
&lt;/code>&lt;/pre>
&lt;details class="spoiler " id="spoiler-5">
&lt;summary>Show me how to edit my &lt;code>cj_config&lt;/code> and &lt;code>ssh_config&lt;/code> files&lt;/summary>
&lt;p>&lt;p>Again, you can edit these two files through your terminal or manually:&lt;br>
☞︎ Directly navigate to &lt;code>CJ_install &amp;gt; cj_config/ssh_config&lt;/code> from your home directory&lt;br>
☞︎ Through your terminal, run:&lt;/p>
&lt;pre>&lt;code>cd ~/CJ_install
open cj_config
open ssh_config
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details>
&lt;p>We&amp;rsquo;re ready to check if everything is working correctly. In your terminal, run:&lt;/p>
&lt;pre>&lt;code>cj init #initialize your CJ agent
cj who #check if the agent is installed
cj update #update to newest version
&lt;/code>&lt;/pre>
&lt;h2 id="step-3-submit-your-first-job-">Step 3: Submit your first job ⚒︎&lt;/h2>
&lt;p>Here&amp;rsquo;s where the real benefit of ClusterJob comes in. To run a job on Sherlock, you normally have to write a job submission script describing your resource request and submission options. ClusterJob automates this process and does it for you! No need to learn anything about Sherlock&amp;rsquo;s job scheduler, &lt;a href="https://slurm.schedmd.com" target="_blank" rel="noopener">Slurm&lt;/a>.&lt;/p>
&lt;h3 id="run-your-first-serial-computation">Run your first serial computation&lt;/h3>
&lt;p>The &lt;code>CJ_install&lt;/code> folders comes with some example scripts to run, so let&amp;rsquo;s give those a try.&lt;/p>
&lt;details class="spoiler " id="spoiler-6">
&lt;summary>Show me the script I&amp;rsquo;m about to run&lt;/summary>
&lt;p>&lt;pre>&lt;code># This is a test Python script for CJ
# Author: Hatef Monajemi June 11 2017
import numpy as np;
import csv;
SUID = 'monajemi'
file = SUID+'_results.csv';
Var0 = np.array([1,2,3]);
Var1 = [1,2];
with open('file.txt','w') as myfile:
for i in range(len(Var0)):
for j in range(len(Var1)): # This is a comment
# write to a text file for testing reduce
with open(file,'a') as csvfile:
resultswriter = csv.writer(csvfile,delimiter=',');
resultswriter.writerow([i,j,Var0[i]+Var1[j] ]);
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details>
&lt;p>In your terminal, run:&lt;/p>
&lt;pre>&lt;code>cd ~/CJ_install/example/Python/ #change directory to the folder with Python example
cj run simpleExample.py sherlock2 -m “A message.” #run your first serial job!
&lt;/code>&lt;/pre>
&lt;p>When you run the second command, starting with &lt;code>cj run&lt;/code>, you&amp;rsquo;ll get a message like this:&lt;/p>
&lt;pre>&lt;code>CJmessage::initiating package 0df1b4e7
&lt;/code>&lt;/pre>
&lt;p>In this case, &lt;code>0df1b4e7&lt;/code> is your job ID (referred to by ClusterJob as &lt;code>pid&lt;/code>, for process identifier); take note of it.&lt;/p>
&lt;details class="spoiler " id="spoiler-7">
&lt;summary>Show me what my CJ messages should look like&lt;/summary>
&lt;p>&lt;pre>&lt;code>CJmessage::initiating package 0df1b4e7
CJmessage::runing [simpleExample.py] on [sherlock2] with:
alloc: --time 48:00:00 --mem 32G
CJmessage::sending from: /Users/shilaan/CJ_install/example/Python
CJmessage::Creating/checking conda venv. This may take a while the first time...
CJmessage::Creating reproducible script(s) reproduce_simpleExample.py
CJmessage::compressing files to propagate...
CJmessage::sending 1.92 KB to: sherlock2:/scratch/users/shilaan/CJRepo_Remote/simpleExample
CJmessage::extracting package...
CJmessage::Submitting job...
CJmessage::1 job(s) submitted (24992894)
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details>
&lt;p>After you&amp;rsquo;ve successfully submitted your job, you can check its status by running:&lt;/p>
&lt;pre>&lt;code>cj state
&lt;/code>&lt;/pre>
&lt;p>When your job is done, you&amp;rsquo;ll see a message like this:&lt;/p>
&lt;pre>&lt;code>pid 0df1b4e7aed70b1a367212f861729d0bc8fcfc29
remote_account: shilaan@login.sherlock.stanford.edu
job_id: 24992894
state: COMPLETED
&lt;/code>&lt;/pre>
&lt;p>Now, another one of ClusterJob&amp;rsquo;s benefits: it&amp;rsquo;s really easy to get the results of your job back onto your local computer. Run:&lt;/p>
&lt;pre>&lt;code>cj get 0df1b4e7 #replace with your own job id
&lt;/code>&lt;/pre>
&lt;p>Now, you&amp;rsquo;ll get the following message:&lt;/p>
&lt;pre>&lt;code>CJmessage::Getting results from 'sherlock2'
CJmessage::Please see your last results in /Users/shilaan/CJ_get_tmp/0df1b4e7aed70b1a367212f861729d0bc8fcfc29
&lt;/code>&lt;/pre>
&lt;p>Your results are ready for viewing! 🥳 The mentioned folder will include your results, your original script, and a script that fully reproduces the results.&lt;/p>
&lt;h3 id="run-your-first-parallel-computation">Run your first parallel computation&lt;/h3>
&lt;p>We can rerun the same job we just submitted, but this time do it in parallel. The script we ran included a for loop over 6 elements (or index combinations). Instead of running this script serially, we can run it in parallel: we can submit a separate job for each index combination. In other words, we&amp;rsquo;ll submit 6 separate jobs to Sherlock. Again, ClusterJob will fully automate this process for you.&lt;/p>
&lt;p>In your terminal, simply run:&lt;/p>
&lt;pre>&lt;code>cd ~/CJ_install/example/Python/ #change directory to the folder with Python example
cj parrun simpleExample.py sherlock2 -m “A message.” #run your first parallel job!
&lt;/code>&lt;/pre>
&lt;p>Now, you should receive the following message:&lt;/p>
&lt;pre>&lt;code>CJmessage::6/6 job(s) submitted
&lt;/code>&lt;/pre>
&lt;details class="spoiler " id="spoiler-8">
&lt;summary>Show me what my CJ messages should look like&lt;/summary>
&lt;p>&lt;pre>&lt;code>CJmessage::initiating package 30236535
CJmessage::parruning [simpleExample.py] on [sherlock2] with:
alloc: --time 48:00:00 --mem 32G
CJmessage::sending from: /Users/shilaan/CJ_install/example/Python
CJmessage::Creating/checking conda venv. This may take a while the first time...
CJmessage::Invoking Python to find range of indices. Please be patient...
Checking command 'python' is available...
python available.
finding range of indices...
Closing Python session!
CJmessage::no SLURM partition specified. CJ is using default partition: long,normal
CJmessage::Creating reproducible script(s) reproduce_simpleExample.py
CJmessage::compressing files to propagate...
CJmessage::sending 2.96 KB to: sherlock2:/scratch/users/shilaan/CJRepo_Remote/simpleExample
CJmessage::extracting package...
CJmessage::Submitting job(s)
CJmessage::6/6 job(s) submitted (24994033-24994039)
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details>
&lt;p>To get the results, we have to first reduce the results of our parallel run into a single file. To do this, we have to identify the file that contains our results &amp;ndash; in this case, &lt;code>monajemi_results.csv&lt;/code> &amp;ndash; and include our job ID.
In your terminal, run:&lt;/p>
&lt;pre>&lt;code>cj reduce monajemi_results.csv 30236535 #change to your own job ID
&lt;/code>&lt;/pre>
&lt;p>You&amp;rsquo;ll be asked if you want to submit the reduce script to the queue via srun. This is recommended for big jobs, but in this case you can simple answer &lt;code>n&lt;/code>. Afterwards, you&amp;rsquo;ll get the following message:&lt;/p>
&lt;pre>&lt;code>CJmessage::Reducing results done! Use &amp;quot;CJ get 30236535 &amp;quot; to get your results.
&lt;/code>&lt;/pre>
&lt;p>&lt;details class="spoiler " id="spoiler-9">
&lt;summary>Show me what my CJ messages should look like&lt;/summary>
&lt;p>&lt;pre>&lt;code>CJmessage::30236535
CJmessage::Checking progress of runs...
CJmessage::Reducing monajemi_results.csv
CJmessage::Do you want to submit the reduce script to the queue via srun? (recommneded for big jobs) Y/N?
n
system:ssh shilaan@login.sherlock.stanford.edu 'cd /scratch/users/shilaan/CJRepo_Remote/simpleExample/3023653586353cab1f4601074519eec3c34f9346; bash -l cj_collect.sh'
SubPackage 1 Collected (16.67%)
SubPackage 2 Collected (33.33%)
SubPackage 3 Collected (50.00%)
SubPackage 4 Collected (66.67%)
SubPackage 5 Collected (83.33%)
SubPackage 6 Collected (100.00%)
CJmessage::Reducing results done! Use &amp;quot;CJ get 30236535 &amp;quot; to get your results.
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details>
Note that the terminal is case-sensitive so we actually have to remove the capitalization from the suggestion and run &lt;code>cj get 30236535&lt;/code>. Afterwards, you should get a message like this:&lt;/p>
&lt;pre>&lt;code>CJmessage::Please see your last results in /Users/shilaan/CJ_get_tmp/3023653586353cab1f4601074519eec3c34f9346
&lt;/code>&lt;/pre>
&lt;p>Navigate to the folder to see the results of your parallel computation!&lt;/p>
&lt;p>&lt;img src="parallel.jpg" alt="">&lt;/p>
&lt;h2 id="acknowledgements">Acknowledgements&lt;/h2>
&lt;p>❤︎ Statistics 285 Teaching Team&lt;br>
❤︎ Mahsa Lotfi and Andrew Donoho, who went above and beyond in helping me get set up&lt;br>
❤︎ The &lt;a href="https://stats285.github.io/elasticlusterjob-tutorial.html" target="_blank" rel="noopener">ElastiCluster and Clusterjob Tutorial&lt;/a>, written by Mahsa Lotfi&lt;br>
❤︎ The &lt;a href="https://clusterjob.org/documentation/" target="_blank" rel="noopener">ClusterJob documentation&lt;/a>&lt;br>
❤︎ The &lt;a href="https://www.sherlock.stanford.edu/docs/overview/introduction/" target="_blank" rel="noopener">Sherlock documentation&lt;/a>&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>On Mac, you can view your hidden folders using &lt;code>Command + Shift + .&lt;/code>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>Building your website using R {blogdown}</title><link>https://alexandrerays.github.io/post/building-your-website-using-r-blogdown/</link><pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/post/building-your-website-using-r-blogdown/</guid><description>&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Table of Contents&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#prerequisites">Prerequisites&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#resources-for-getting-started-with-github-hahahugoshortcode-s6-hbhb">Resources for getting started with GitHub
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i>&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#step-1-create-github-repository">Step 1: Create GitHub repository&lt;/a>&lt;/li>
&lt;li>&lt;a href="#step-2-create-project-with-version-control-in-rstudio">Step 2: Create project with Version Control in RStudio&lt;/a>&lt;/li>
&lt;li>&lt;a href="#step-3-create-website-with-blogdown">Step 3: Create website with {blogdown}&lt;/a>&lt;/li>
&lt;li>&lt;a href="#step-4-push--to-github">Step 4: Push ⬆︎ to GitHub&lt;/a>&lt;/li>
&lt;li>&lt;a href="#step-5-deploy-site-with-netlify">Step 5: Deploy site with Netlify&lt;/a>&lt;/li>
&lt;li>&lt;a href="#step-6-customize-your-site-with-wowchemy-">Step 6: Customize your site with Wowchemy 🎨&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#personal-information">Personal information&lt;/a>&lt;/li>
&lt;li>&lt;a href="#widgets">Widgets&lt;/a>&lt;/li>
&lt;li>&lt;a href="#menu">Menu&lt;/a>&lt;/li>
&lt;li>&lt;a href="#theme">Theme&lt;/a>&lt;/li>
&lt;li>&lt;a href="#website-icon">Website icon&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#step-7-write-your-first-post-">Step 7: Write your first post ✍&lt;/a>&lt;/li>
&lt;li>&lt;a href="#were-done-">We&amp;rsquo;re done! 💪&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#acknowledgements">Acknowledgements&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;p>I finally decided to bite the bullet and create my own website using
&lt;i class="fab fa-r-project pr-1 fa-fw">&lt;/i> &lt;code>{blogdown}&lt;/code>. If you&amp;rsquo;re like me, you&amp;rsquo;ve already seen many inspiring examples of websites created with blogdown (for example, the webpages of &lt;a href="https://juliasilge.com/about/" target="_blank" rel="noopener">Julia Silge&lt;/a>, &lt;a href="https://silvia.rbind.io" target="_blank" rel="noopener">Silvia Canelón&lt;/a>, and &lt;a href="https://mauriciocely.github.io" target="_blank" rel="noopener">Iván Mauricio Cely Toro&lt;/a>), but the process of creating it sounds slightly overwhelming. 😰&lt;/p>
&lt;p>If so, this post is for you: I&amp;rsquo;ll walk you through my step-by-step process of building a site using &lt;a href="https://github.com/rstudio/blogdown" target="_blank" rel="noopener">blogdown&lt;/a> and the &lt;a href="https://wowchemy.com" target="_blank" rel="noopener">Wowchemy&lt;/a> theme for &lt;a href="https://gohugo.io" target="_blank" rel="noopener">Hugo&lt;/a> and deploying it with &lt;a href="https://www.netlify.com" target="_blank" rel="noopener">Netlify&lt;/a>. I largely followed the process documented &lt;a href="https://alison.rbind.io/post/new-year-new-blogdown/" target="_blank" rel="noopener">here&lt;/a> by Alison Hill. The good news: we&amp;rsquo;ll mostly build and customize the website from the comfort of RStudio. 🥳&lt;/p>
&lt;p>My goal is to write a concise step-by-step guide without having you worry too much about what&amp;rsquo;s happening behind the scenes. For a much more comprehensive guide, please check out &lt;a href="https://alison.rbind.io/post/new-year-new-blogdown/" target="_blank" rel="noopener">Alison&amp;rsquo;s blog&lt;/a>.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>
&lt;i class="fas fa-download pr-1 fa-fw">&lt;/i> Install a recent version of &lt;a href="https://cran.r-project.org" target="_blank" rel="noopener">R&lt;/a> and &lt;a href="https://www.rstudio.com/products/rstudio/download/" target="_blank" rel="noopener">RStudio&lt;/a>&lt;br>
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/join" target="_blank" rel="noopener">Create&lt;/a> a GitHub account&lt;br>
&lt;i class="fab fa-r-project pr-1 fa-fw">&lt;/i> &lt;a href="https://happygitwithr.com/connect-intro.html" target="_blank" rel="noopener">Connect&lt;/a> RStudio to GitHub (preferably with &lt;a href="https://happygitwithr.com/credential-caching.html#credential-caching" target="_blank" rel="noopener">HTTPS&lt;/a>)&lt;br>
&lt;i class="fas fa-user-plus pr-1 fa-fw">&lt;/i> &lt;a href="https://www.netlify.com" target="_blank" rel="noopener">Sign up&lt;/a> with Netlify using your GitHub account&lt;/p>
&lt;h3 id="resources-for-getting-started-with-github-hahahugoshortcode-s6-hbhb">Resources for getting started with GitHub
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i>&lt;/h3>
&lt;p>⚒︎ &lt;a href="https://happygitwithr.com/github-acct.html" target="_blank" rel="noopener">Happy Git and GitHub for the useR&lt;/a>&lt;br>
⚒︎ &lt;a href="https://the-turing-way.netlify.app/collaboration/github-novice.html#" target="_blank" rel="noopener">The Turing Way Guide for Collaboration&lt;/a>&lt;br>
⚒︎ &lt;a href="https://www.startyourlab.com/docs/github-accounts/" target="_blank" rel="noopener">Start Your Lab guide&lt;/a> &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;h2 id="step-1-create-github-repository">Step 1: Create GitHub repository&lt;/h2>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://github.com/new" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">Click to create a new repository&lt;/a>
&lt;/li>
&lt;/ul>
&lt;div class="alert alert-note">
&lt;div>
Use the following settings:&lt;br>
✓ Keep the repository &lt;code>Public&lt;/code>&lt;br>
✓ Add a &lt;code>README&lt;/code> file&lt;br>
✓ Do not add &lt;code>.gitignore&lt;/code>
&lt;/div>
&lt;/div>
&lt;details class="spoiler " id="spoiler-10">
&lt;summary>Click to view screenshots for Step 1&lt;/summary>
&lt;p>&lt;img src="new-repository.png" alt="">&lt;/p>
&lt;/details>
&lt;h2 id="step-2-create-project-with-version-control-in-rstudio">Step 2: Create project with Version Control in RStudio&lt;/h2>
&lt;p>☞︎ Go to &lt;code>https://github.com/your-username/your-repository&lt;/code>&lt;br>
☞︎ Click on the green &lt;code>Code&lt;/code> button&lt;br>
☞ Copy the &lt;code>HTTPS&lt;/code> link to your clipboard&lt;br>
☞ Go to &lt;code>RStudio &amp;gt; File &amp;gt; New Project &amp;gt; Version Control &amp;gt; Git&lt;/code>&lt;br>
☞︎︎ Copy paste the &lt;code>HTTPS&lt;/code> link under &lt;code>Repository URL&lt;/code>&lt;br>
☞ Click &lt;code>Create Poject&lt;/code>&lt;/p>
&lt;details class="spoiler " id="spoiler-11">
&lt;summary>Click to view screenshots for Step 2&lt;/summary>
&lt;p>&lt;img src="https.png" alt="">
&lt;img src="new-project.png" alt="">
&lt;img src="version-control.png" alt="">
&lt;img src="git.png" alt="">&lt;/p>
&lt;/details>
&lt;h2 id="step-3-create-website-with-blogdown">Step 3: Create website with {blogdown}&lt;/h2>
&lt;pre>&lt;code class="language-r">install.packages(&amp;quot;blogdown&amp;quot;) # install the blogdown package
library(blogdown) # load blogdown
new_site(theme = &amp;quot;wowchemy/starter-academic&amp;quot;) # create your website!
&lt;/code>&lt;/pre>
&lt;p>You will now be asked if you want to serve and preview the site locally (before publishing). Type &lt;code>y&lt;/code> in your Console.
&lt;img src="y.jpg" alt="">&lt;/p>
&lt;p>A preview will show up in your Viewer Pane. Click on the
&lt;i class="fas fa-external-link-alt pr-1 fa-fw">&lt;/i> &amp;ldquo;Show in new window&amp;rdquo; icon next to the 🧹 to preview your site in a browser window.&lt;/p>
&lt;details class="spoiler " id="spoiler-13">
&lt;summary>Click to view screenshots for Step 3&lt;/summary>
&lt;p>&lt;img src="new-site.png" alt="">
&lt;img src="viewer-in-new-window.png" alt="">&lt;/p>
&lt;/details>
&lt;h2 id="step-4-push--to-github">Step 4: Push ⬆︎ to GitHub&lt;/h2>
&lt;p>In the console, run the following line of code to create a &lt;code>.gitignore&lt;/code> file:&lt;/p>
&lt;pre>&lt;code class="language-r">file.edit(&amp;quot;gitignore&amp;quot;)
&lt;/code>&lt;/pre>
&lt;p>Add the following lines to the &lt;code>.gitignore&lt;/code> file:&lt;/p>
&lt;pre>&lt;code class="language-r">.Rproj.user
.Rhistory
.RData
.Ruserdata
.DS_Store
Thumbs.db
&lt;/code>&lt;/pre>
&lt;p>Before we make our first commit, we use blogdown to check all our files:&lt;/p>
&lt;pre>&lt;code class="language-r">blogdown::check_site()
&lt;/code>&lt;/pre>
&lt;p>This will give you a number of &lt;code>[TODO]&lt;/code> items, like adding &lt;code>public&lt;/code> and &lt;code>resources&lt;/code> to the &lt;code>.gitignore&lt;/code> file, which you can do safely. Don&amp;rsquo;t worry about content flagged as &lt;code>draft&lt;/code> or files with a future publish date. If you have a &lt;code>[TODO]&lt;/code> item related to your &lt;code>.Rprofile&lt;/code>, run &lt;code>blogdown::config_Rprofile()&lt;/code>.&lt;/p>
&lt;p>After running these checks, you&amp;rsquo;re ready to commit to GitHub! 🎉&lt;/p>
&lt;details class="spoiler " id="spoiler-14">
&lt;summary>Show me how to commit to GitHub&lt;/summary>
&lt;p>&lt;div class="alert alert-note">
&lt;div>
☞ Go to the &lt;code>Environment&lt;/code> Pane&lt;br>
☞ Click on &lt;code>Commit&lt;/code> under &lt;code>Git&lt;/code>&lt;br>
☞ Check ☑︎ files to &lt;code>Stage&lt;/code> them&lt;br>
☞ Write a commit message&lt;br>
☞ &lt;code>Commit&lt;/code> and then &lt;code>Push&lt;/code> ⬆︎
&lt;/div>
&lt;/div>
&lt;/p>
&lt;/details>
&lt;h2 id="step-5-deploy-site-with-netlify">Step 5: Deploy site with Netlify&lt;/h2>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://github.com/login?client_id=0eef2fa971fd9f7d46a2&amp;amp;return_to=%2Flogin%2Foauth%2Fauthorize%3Fclient_id%3D0eef2fa971fd9f7d46a2%26redirect_uri%3Dhttps%253A%252F%252Fapi.netlify.com%252Fauth%252Fdone%26scope%3Duser%253Aemail%26state%3DeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJwaWQiOiI1NmMzZjE1MDcxZTIwYTE4ZGIwMDAwMGYiLCJleHAiOjE2MjA4ODA5OTYsImxvZ2luIjp0cnVlfQ.5GilGKggLeOdejJI5_1VXSWmofo5n30SKHSX77VWncQ" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">Log in to Netlify with GitHub&lt;/a>
&lt;/li>
&lt;/ul>
&lt;p>After logging in to Netlify through GitHub, you can deploy&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> your website and change the url to your preferred site name, as follows:&lt;/p>
&lt;p>☞ Select &lt;code>New site from Git &amp;gt; Continuous Deployment: GitHub&lt;/code>&lt;br>
☞ Select your website repository&lt;br>
☞ &lt;code>Deploy Site&lt;/code>&lt;br>
☞ &lt;code>Settings &amp;gt; Site information &amp;gt; Change site name&lt;/code>&lt;/p>
&lt;p>Back in RStudio, change the baseurl to your new link in your configuration file:&lt;/p>
&lt;pre>&lt;code class="language-r">install.packages(&amp;quot;rstudioapi&amp;quot;)
library(rstudioapi) # to easily navigate to files
rstudioapi::navigateToFile(&amp;quot;config.yaml&amp;quot;)
&lt;/code>&lt;/pre>
&lt;p>In &lt;code>config.yaml&lt;/code>, set the following:&lt;/p>
&lt;pre>&lt;code class="language-yaml">baseurl: 'http://your-site-name.netlify.app' # use the link you just created
&lt;/code>&lt;/pre>
&lt;p>Before committing, let&amp;rsquo;s again run&lt;/p>
&lt;pre>&lt;code class="language-r">blogdown::check_site() # checks to resolve critical [TODOs] before commit
&lt;/code>&lt;/pre>
&lt;p>Among other things, you need to make sure that the version of Hugo that you are using locally with {blogdown} matches the version used by Netlify (which is specified in &lt;code>netlify.toml&lt;/code>). You will likely need to change your &lt;code>netlify.toml&lt;/code> file. Remember that you can easily navigate to this file using&lt;/p>
&lt;pre>&lt;code class="language-r">rstudioapi::navigateToFile(&amp;quot;netlify.toml&amp;quot;)
&lt;/code>&lt;/pre>
&lt;h2 id="step-6-customize-your-site-with-wowchemy-">Step 6: Customize your site with Wowchemy 🎨&lt;/h2>
&lt;center>
&lt;p>It&amp;rsquo;s time to customize! ❤︎&lt;/p>
&lt;/center>
&lt;p>&lt;img src="excited.jpg" alt="">&lt;/p>
&lt;h3 id="personal-information">Personal information&lt;/h3>
&lt;p>First, we&amp;rsquo;ll edit the &lt;code>About&lt;/code> information (called a widget) on your homepage.&lt;/p>
&lt;pre>&lt;code class="language-r">rstudioapi::navigateToFile(&amp;quot;content/authors/admin/_index.md&amp;quot;)
&lt;/code>&lt;/pre>
&lt;p>☞ Fill in the &lt;code>_index.md&lt;/code> with your personal information (find mine &lt;a href="https://raw.githubusercontent.com/shilaan/personal-website/main/content/authors/admin/_index.md" target="_blank" rel="noopener">here&lt;/a>)&lt;br>
☞ Personalize with desired &lt;a href="https://wowchemy.com/docs/getting-started/page-builder/#icons" target="_blank" rel="noopener">icons&lt;/a>
&lt;i class="ai ai-sci-hub pr-1 fa-fw">&lt;/i>&lt;br>
☞ Add your picture called &lt;code>avatar.jpg&lt;/code> to the &lt;code>content/authors/admin/&lt;/code> folder&lt;/p>
&lt;p>To change (or remove) the title of your &lt;code>About&lt;/code> widget,&lt;/p>
&lt;pre>&lt;code class="language-r">rstudioapi::navigateToFile(&amp;quot;content/home/about.md&amp;quot;)
&lt;/code>&lt;/pre>
&lt;p>set &lt;code>title: My new title&lt;/code>&lt;/p>
&lt;details class="spoiler " id="spoiler-17">
&lt;summary>Show me what a personalized page looks like&lt;/summary>
&lt;p>The &lt;code>about&lt;/code> page:
&lt;img src="about.png" alt="">
The shortened &lt;code>bio&lt;/code> (appears under your blogposts):
&lt;img src="bio.png" alt="">&lt;/p>
&lt;/details>
&lt;h3 id="widgets">Widgets&lt;/h3>
&lt;p>To get rid of and rename the other widgets on your homepage,&lt;br>
☞ Go to the &lt;code>Files&lt;/code> tab on your &lt;code>Viewer&lt;/code> pane&lt;br>
☞ Open the &lt;code>.md&lt;/code> of a widget you wish to deactivate, e.g. &lt;code>hero.md&lt;/code> &lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup> &lt;br>
☞ Write &lt;code>active:false&lt;/code>&lt;br>
☞ Change titles to your liking with &lt;code>title: My new title&lt;/code>&lt;br>
☞ Repeat for all other widges you wish to deactivate or personalize&lt;/p>
&lt;p>I wanted to start with a pretty minimal webpage, so I deactivated all widgets except for &lt;code>about.md&lt;/code> and &lt;code>posts.md&lt;/code>.&lt;/p>
&lt;details class="spoiler " id="spoiler-18">
&lt;summary>Click to view a screenshot for this step&lt;/summary>
&lt;p>&lt;img src="widgets.png" alt="">&lt;/p>
&lt;/details>
&lt;h3 id="menu">Menu&lt;/h3>
&lt;p>Now that you&amp;rsquo;ve deactivated some widgets, you&amp;rsquo;ll no longer want to link to them in your main menu (the navigation bar at the top).&lt;/p>
&lt;p>Customize your main menu in &lt;code>config/_default/menus.yaml&lt;/code>&lt;/p>
&lt;pre>&lt;code class="language-r">rstudioapi::navigateToFile(&amp;quot;config/_default/menus.yaml&amp;quot;)
&lt;/code>&lt;/pre>
&lt;p>☞ &lt;code>name: My new name&lt;/code> to change the name of your menu items&lt;br>
☞ Remove the links to widgets that you deactivated (&lt;a href="https://raw.githubusercontent.com/shilaan/personal-website/main/config/_default/menus.yaml" target="_blank" rel="noopener">here&amp;rsquo;s my &lt;code>menus.yaml&lt;/code>&lt;/a>)&lt;/p>
&lt;h3 id="theme">Theme&lt;/h3>
&lt;p>&lt;img src="themes.png" alt="">&lt;/p>
&lt;p>☞ Pick a built-in Wowchemy color theme&lt;br>
☞ &lt;code>rstudioapi::navigateToFile(&amp;quot;config/_default/params.yaml&amp;quot;)&lt;/code>&lt;br>
☞ Set &lt;code>theme: rose&lt;/code> (or whichever your chosen theme is; no capitalization)&lt;/p>
&lt;p>I initially chose the &lt;code>Rose&lt;/code> theme, but decided I wanted to further customize the color theme using the steps outlined &lt;a href="https://wowchemy.com/docs/getting-started/customization/#community-themes" target="_blank" rel="noopener">here&lt;/a>:&lt;/p>
&lt;p>☑︎ I located the &lt;code>rose.toml&lt;/code> file&lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>&lt;br>
☑︎ I created a new &lt;code>data/themes/&lt;/code> folder at the root of my site&lt;br>
☑︎ I copied the &lt;code>rose.toml&lt;/code> file into &lt;code>data/themes/shilaan_theme.toml&lt;/code>&lt;br>
☑︎ I adjusted the colors as desired using &lt;a href="https://htmlcolorcodes.com" target="_blank" rel="noopener">HTML color codes&lt;/a>&lt;br>
☑︎ I set &lt;code>theme: shilaan_theme&lt;/code> in &lt;code>config/_default/params.yaml&lt;/code>&lt;/p>
&lt;p>You can also &lt;a href="https://wowchemy.com/docs/getting-started/customization/#custom-font" target="_blank" rel="noopener">customize the font set&lt;/a>.&lt;/p>
&lt;details class="spoiler " id="spoiler-19">
&lt;summary>Show example GitHub files for creating my own theme&lt;/summary>
&lt;p>&lt;p>&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/shilaan/personal-website/blob/main/data/themes/shilaan_theme.toml">data/themes/shilaan_theme.toml&lt;/a>&lt;/p>
&lt;p>&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/shilaan/personal-website/blob/main/config/_default/params.yaml">config/_default/params.yaml&lt;/a>&lt;/p>
&lt;/p>
&lt;/details>
&lt;h3 id="website-icon">Website icon&lt;/h3>
&lt;p>By default, your website will be published with the Wowchemy icon in the web browser tab. For example:
&lt;img src="example-default-icon.png" alt="">&lt;/p>
&lt;p>To get &lt;a href="https://wowchemy.com/docs/getting-started/customization/#website-icon" target="_blank" rel="noopener">your own Website icon&lt;/a>, save a square 512x512 pixel image named &lt;code>icon.png&lt;/code> in your root &lt;code>assets/media/&lt;/code> folder. My webpage should now show up in your Browser like this: &lt;img src="example-adjusted-icon.png" alt="">&lt;/p>
&lt;details class="spoiler " id="spoiler-20">
&lt;summary>I followed the steps but my Website icon hasn&amp;rsquo;t changed&lt;/summary>
&lt;p>I ran into this issue. Simply clear your website from your browser history. 🧼 I didn&amp;rsquo;t realize the problem was caused by my cache until finding &lt;a href="https://github.com/wowchemy/wowchemy-hugo-modules/issues/1391#issuecomment-807274736">this issue&lt;/a>.&lt;/p>
&lt;/details>
&lt;h2 id="step-7-write-your-first-post-">Step 7: Write your first post ✍&lt;/h2>
&lt;p>To remove the example posts currently populating your website (e.g., &lt;em>Welcome to Wowchemy, the website builder for Hugo&lt;/em>), navigate to &lt;code>content/post&lt;/code> and remove the folders associated with them (in this case, the &lt;code>getting-started&lt;/code> folder).&lt;/p>
&lt;p>If you find these posts helpful, you can always take another look at them on the &lt;a href="https://academic-demo.netlify.app" target="_blank" rel="noopener">Demo site&lt;/a> and find their underlying files at &lt;code>themes/starter-academic/exampleSite/content/post&lt;/code>.&lt;/p>
&lt;p>If you really want to keep these files on hand, you can save them as a draft so that they don&amp;rsquo;t publish on your site anymore. You will still see them in your preview when you serve your site locally. For example:&lt;/p>
&lt;pre>&lt;code class="language-r">rstudioapi::navigateToFile(&amp;quot;content/post/getting-started/index.md&amp;quot;)
&lt;/code>&lt;/pre>
&lt;p>Now, set &lt;code>draft:true&lt;/code> in the front matter. From now on, whenever you run &lt;code>blogdown::check_site()&lt;/code>, you will be reminded that you have these files marked as drafts.&lt;/p>
&lt;p>We&amp;rsquo;re ready to write!&lt;/p>
&lt;p>&lt;img src="ready.jpg" alt="">&lt;/p>
&lt;p>In your console, type&lt;/p>
&lt;pre>&lt;code class="language-r">blogdown::new_post(
title = &amp;quot;My first post&amp;quot;,
ext = '.Rmarkdown',
subdir = &amp;quot;post&amp;quot;
)
&lt;/code>&lt;/pre>
&lt;p>In your &lt;code>Files&lt;/code> pane, you will now have a folder (under &lt;code>content/post&lt;/code>) with today&amp;rsquo;s date and the title of your post. The crucial file is &lt;code>index.Rmarkdown&lt;/code>: this is where you will write your post.&lt;/p>
&lt;p>Go ahead and open &lt;code>index.Rmarkdown&lt;/code>. When you knit this&lt;sup id="fnref:5">&lt;a href="#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>, your website will preview in the Viewer pane. Remember that you can click on the
&lt;i class="fas fa-external-link-alt pr-1 fa-fw">&lt;/i> &amp;ldquo;Show in new window&amp;rdquo; icon next to the 🧹 to preview your site in a browser window.&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
Make sure you edit the &lt;code>index.Rmarkdown&lt;/code> file, not the &lt;code>index.markdown&lt;/code> file. The markdown file is automatically created and updated when you knit your Rmarkdown.
&lt;/div>
&lt;/div>
&lt;p>Go ahead and add an R code chunk:&lt;/p>
&lt;pre>&lt;code>```{r echo=FALSE}
library(ggplot2)
x = seq(-1, 1, .01)
y = sin(x^3)/(1 + x^6)
ggplot(aes(x = x, y = y)) +
geom_line() +
geom_ribbon(
aes(ymin = 0, ymax = y),
fill = &amp;quot;pink&amp;quot;,
alpha = 0.5
) +
theme_void()
```
&lt;/code>&lt;/pre>
&lt;p>Knit your Rmarkdown. Check out what it looks like, write your own content, and push⬆︎ to GitHub when you&amp;rsquo;re ready. Don&amp;rsquo;t forget about the option to run &lt;code>blogdown::check_site()&lt;/code>.&lt;/p>
&lt;details class="spoiler " id="spoiler-23">
&lt;summary>Show me screenshots of this step&lt;/summary>
&lt;p>&lt;img src="index.png" alt="">
&lt;img src="files.png" alt="">
&lt;img src="first-post.png" alt="">&lt;/p>
&lt;/details>
&lt;h2 id="were-done-">We&amp;rsquo;re done! 💪&lt;/h2>
&lt;p>&lt;img src="minions.png" alt="">&lt;/p>
&lt;center>
&lt;p>I hope this was helpful! Feel free to &lt;a href="https://twitter.com/shilaan01/status/1393071955964665857?s=20" target="_blank" rel="noopener">leave a comment
&lt;i class="fab fa-twitter pr-1 fa-fw">&lt;/i>&lt;/a>&lt;/p>
&lt;/center>
&lt;h3 id="acknowledgements">Acknowledgements&lt;/h3>
&lt;p>My workflow, and a large part of the content of this post, is based on &lt;a href="https://alison.rbind.io/post/new-year-new-blogdown/" target="_blank" rel="noopener">Alison Hill&amp;rsquo;s materials&lt;/a>. In addition, I would not have made this website if it wasn&amp;rsquo;t for Daniël Lakens friendly nudging me (about 5 months ago&amp;hellip; it took me a while to accept my fate). Thank you, Alison and Daniël! 🙏&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>Thank you to &lt;a href="https://www.aridyckovsky.com" target="_blank" rel="noopener">Ari Dyckovsky&lt;/a> for &lt;a href="https://twitter.com/adyckovsky/status/1393346563481735168?s=20" target="_blank" rel="noopener">suggesting this addition
&lt;i class="fab fa-twitter pr-1 fa-fw">&lt;/i>&lt;/a> to the post&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>Continuous deployment ensures that your website is rebuilt every time you push⬆︎ to GitHub.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>The &lt;code>hero&lt;/code> widget is the top blue pane that introduces &lt;em>Hugo Academic Starter&lt;/em>&amp;#160;&lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>Themes are in &lt;code>themes/github/com/wowchemy/wowchemy-hugo-modules/wowchemy/data&lt;/code>. In this folder, go to &lt;code>/fonts&lt;/code> for font sets and to &lt;code>themes&lt;/code> for color themes.&amp;#160;&lt;a href="#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>Use either the Knit button, &lt;code>command + shift + k&lt;/code> on Mac, or &lt;code>control + shift + k&lt;/code> on Windows/Linux.&amp;#160;&lt;a href="#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>Demystifying CNNs with Grad-CAM</title><link>https://alexandrerays.github.io/talk/demystifying-cnns-with-grad-cam/</link><pubDate>Thu, 03 Dec 2020 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/talk/demystifying-cnns-with-grad-cam/</guid><description/></item><item><title>How to make versioning control of data and machine learning models using DVC?</title><link>https://alexandrerays.github.io/talk/how-to-make-versioning-control-of-data-and-machine-learning-models-using-dvc/</link><pubDate>Wed, 27 Nov 2019 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/talk/how-to-make-versioning-control-of-data-and-machine-learning-models-using-dvc/</guid><description/></item><item><title>Machine Learning Canvas - From data collection to value proposition</title><link>https://alexandrerays.github.io/talk/machine-learning-canvas-from-data-collection-to-value-proposition/</link><pubDate>Wed, 27 Nov 2019 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/talk/machine-learning-canvas-from-data-collection-to-value-proposition/</guid><description/></item><item><title>Slides</title><link>https://alexandrerays.github.io/slides/example/</link><pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/slides/example/</guid><description>&lt;h1 id="create-slides-in-markdown-with-wowchemy">Create slides in Markdown with Wowchemy&lt;/h1>
&lt;p>&lt;a href="https://wowchemy.com/" target="_blank" rel="noopener">Wowchemy&lt;/a> | &lt;a href="https://owchemy.com/docs/managing-content/#create-slides" target="_blank" rel="noopener">Documentation&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>Efficiently write slides in Markdown&lt;/li>
&lt;li>3-in-1: Create, Present, and Publish your slides&lt;/li>
&lt;li>Supports speaker notes&lt;/li>
&lt;li>Mobile friendly slides&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="controls">Controls&lt;/h2>
&lt;ul>
&lt;li>Next: &lt;code>Right Arrow&lt;/code> or &lt;code>Space&lt;/code>&lt;/li>
&lt;li>Previous: &lt;code>Left Arrow&lt;/code>&lt;/li>
&lt;li>Start: &lt;code>Home&lt;/code>&lt;/li>
&lt;li>Finish: &lt;code>End&lt;/code>&lt;/li>
&lt;li>Overview: &lt;code>Esc&lt;/code>&lt;/li>
&lt;li>Speaker notes: &lt;code>S&lt;/code>&lt;/li>
&lt;li>Fullscreen: &lt;code>F&lt;/code>&lt;/li>
&lt;li>Zoom: &lt;code>Alt + Click&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/hakimel/reveal.js#pdf-export" target="_blank" rel="noopener">PDF Export&lt;/a>: &lt;code>E&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="code-highlighting">Code Highlighting&lt;/h2>
&lt;p>Inline code: &lt;code>variable&lt;/code>&lt;/p>
&lt;p>Code block:&lt;/p>
&lt;pre>&lt;code class="language-python">porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
print(&amp;quot;Eating...&amp;quot;)
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h2 id="math">Math&lt;/h2>
&lt;p>In-line math: $x + y = z$&lt;/p>
&lt;p>Block math:&lt;/p>
&lt;p>$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p>
&lt;hr>
&lt;h2 id="fragments">Fragments&lt;/h2>
&lt;p>Make content appear incrementally&lt;/p>
&lt;pre>&lt;code>{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code>&lt;/pre>
&lt;p>Press &lt;code>Space&lt;/code> to play!&lt;/p>
&lt;span class="fragment " >
One
&lt;/span>
&lt;span class="fragment " >
**Two**
&lt;/span>
&lt;span class="fragment " >
Three
&lt;/span>
&lt;hr>
&lt;p>A fragment can accept two optional parameters:&lt;/p>
&lt;ul>
&lt;li>&lt;code>class&lt;/code>: use a custom style (requires definition in custom CSS)&lt;/li>
&lt;li>&lt;code>weight&lt;/code>: sets the order in which a fragment appears&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="speaker-notes">Speaker Notes&lt;/h2>
&lt;p>Add speaker notes to your presentation&lt;/p>
&lt;pre>&lt;code class="language-markdown">{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code>&lt;/pre>
&lt;p>Press the &lt;code>S&lt;/code> key to view the speaker notes!&lt;/p>
&lt;aside class="notes">
&lt;ul>
&lt;li>Only the speaker can read these notes&lt;/li>
&lt;li>Press &lt;code>S&lt;/code> key to view&lt;/li>
&lt;/ul>
&lt;/aside>
&lt;hr>
&lt;h2 id="themes">Themes&lt;/h2>
&lt;ul>
&lt;li>black: Black background, white text, blue links (default)&lt;/li>
&lt;li>white: White background, black text, blue links&lt;/li>
&lt;li>league: Gray background, white text, blue links&lt;/li>
&lt;li>beige: Beige background, dark text, brown links&lt;/li>
&lt;li>sky: Blue background, thin dark text, blue links&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>night: Black background, thick white text, orange links&lt;/li>
&lt;li>serif: Cappuccino background, gray text, brown links&lt;/li>
&lt;li>simple: White background, black text, blue links&lt;/li>
&lt;li>solarized: Cream-colored background, dark green text, blue links&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section data-noprocess data-shortcode-slide
data-background-image="/media/boards.jpg"
>
&lt;h2 id="custom-slide">Custom Slide&lt;/h2>
&lt;p>Customize the slide style and background&lt;/p>
&lt;pre>&lt;code class="language-markdown">{{&amp;lt; slide background-image=&amp;quot;/media/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h2 id="custom-css-example">Custom CSS Example&lt;/h2>
&lt;p>Let&amp;rsquo;s make headers navy colored.&lt;/p>
&lt;p>Create &lt;code>assets/css/reveal_custom.css&lt;/code> with:&lt;/p>
&lt;pre>&lt;code class="language-css">.reveal section h1,
.reveal section h2,
.reveal section h3 {
color: navy;
}
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h1 id="questions">Questions?&lt;/h1>
&lt;p>&lt;a href="https://github.com/wowchemy/wowchemy-hugo-modules/discussions" target="_blank" rel="noopener">Ask&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://wowchemy.com/docs/managing-content/#create-slides" target="_blank" rel="noopener">Documentation&lt;/a>&lt;/p></description></item><item><title/><link>https://alexandrerays.github.io/admin/config.yml</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/admin/config.yml</guid><description/></item><item><title>Analyzing brazilian elementary education indicators</title><link>https://alexandrerays.github.io/project/education/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/project/education/</guid><description/></item><item><title>Bike Sharing Demand</title><link>https://alexandrerays.github.io/project/bike/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/project/bike/</guid><description/></item><item><title>Evaluate the main factors that lead to late detection of early breast cancer</title><link>https://alexandrerays.github.io/project/mama_cancer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/project/mama_cancer/</guid><description/></item><item><title>Socioeconomic aspects versus accessibility to subway stations of the city of São Paulo</title><link>https://alexandrerays.github.io/project/tau/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alexandrerays.github.io/project/tau/</guid><description/></item></channel></rss>