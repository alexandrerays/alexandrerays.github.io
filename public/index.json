[{"authors":null,"categories":null,"content":"I am a Data Scientist with over 10 years of experience in artificial intelligence, machine learning, software engineering, and systems design. Throughout my career, I have worked across multiple industries, including investment banking, IT consulting \u0026amp; outsourcing, fintech, manufacturing, education, healthcare, and casinos.\nI have a strong academic background, holding a bachelor\u0026rsquo;s degree in computational physics and a master\u0026rsquo;s degree in engineering, both from USP (University of S√£o Paulo).\nMy expertise spans Python, SQL, machine learning, statistics, data modeling, and project management. I have successfully led multidisciplinary teams from various countries. With over three years of experience working for US companies, I have developed a deep understanding of global business and technology landscapes.\nI thrive in complex problem-solving environments, bringing a proactive and strategic approach to optimizing analytical processes, designing scalable systems, and driving innovation. Whether in financial services, education, or healthcare, I adapt quickly to new challenges and leverage data-driven insights to create impactful solutions.\n####  Download my CV  -- ","date":1738972800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1738972800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://alexandrerays.github.io/author/alexandre-ray/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/alexandre-ray/","section":"authors","summary":"I am a Data Scientist with over 10 years of experience in artificial intelligence, machine learning, software engineering, and systems design. Throughout my career, I have worked across multiple industries, including investment banking, IT consulting \u0026amp; outsourcing, fintech, manufacturing, education, healthcare, and casinos.","tags":null,"title":"Alexandre Ray","type":"authors"},{"authors":null,"categories":null,"content":"Âê≥ÊÅ©ÈÅî is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"da99cb196019cc5857b9b3e950397ca9","permalink":"https://alexandrerays.github.io/author/%E5%90%B3%E6%81%A9%E9%81%94/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/%E5%90%B3%E6%81%A9%E9%81%94/","section":"authors","summary":"Âê≥ÊÅ©ÈÅî is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.","tags":null,"title":"Âê≥ÊÅ©ÈÅî","type":"authors"},{"authors":null,"categories":null,"content":"   Table of Contents  What you will learn Program overview Courses in this program Meet your instructor FAQs    What you will learn  Fundamental Python programming skills Statistical concepts and how to apply them in practice Gain experience with the Scikit, including data visualization with Plotly and data wrangling with Pandas  Program overview The demand for skilled data science practitioners is rapidly growing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi.\nCourses in this program  Python basics Build a foundation in Python.   Visualization Learn how to visualize data with Plotly.   Statistics Introduction to statistics for data science.   Meet your instructor Alexandre Ray FAQs Are there prerequisites? There are no prerequisites for the first course.\n How often do the courses run? Continuously, at your own pace.\n  Begin the course   ","date":1611446400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1611446400,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"https://alexandrerays.github.io/courses/example/","publishdate":"2021-01-24T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"An example of using Wowchemy's Book layout for publishing online courses.","tags":null,"title":"üìä Learn Data Science","type":"book"},{"authors":null,"categories":null,"content":"Build a foundation in Python.\n  1-2 hours per week, for 8 weeks\nLearn   Quiz What is the difference between lists and tuples? Lists\n Lists are mutable - they can be changed Slower than tuples Syntax: a_list = [1, 2.0, 'Hello world']  Tuples\n Tuples are immutable - they can\u0026rsquo;t be changed Tuples are faster than lists Syntax: a_tuple = (1, 2.0, 'Hello world')   Is Python case-sensitive? Yes\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"17a31b92253d299002593b7491eedeea","permalink":"https://alexandrerays.github.io/courses/example/python/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/courses/example/python/","section":"courses","summary":"Build a foundation in Python.\n","tags":null,"title":"Python basics","type":"book"},{"authors":null,"categories":null,"content":"Learn how to visualize data with Plotly.\n  1-2 hours per week, for 8 weeks\nLearn   Quiz When is a heatmap useful? Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n Write Plotly code to render a bar chart import plotly.express as px data_canada = px.data.gapminder().query(\u0026quot;country == 'Canada'\u0026quot;) fig = px.bar(data_canada, x='year', y='pop') fig.show()  ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"1b341b3479c8c6b1f807553b77e21b7c","permalink":"https://alexandrerays.github.io/courses/example/visualization/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/courses/example/visualization/","section":"courses","summary":"Learn how to visualize data with Plotly.\n","tags":null,"title":"Visualization","type":"book"},{"authors":null,"categories":null,"content":"Introduction to statistics for data science.\n  1-2 hours per week, for 8 weeks\nLearn The general form of the normal probability density function is:\n$$ f(x) = \\frac{1}{\\sigma \\sqrt{2\\pi} } e^{-\\frac{1}{2}\\left(\\frac{x-\\mu}{\\sigma}\\right)^2} $$\n The parameter $\\mu$ is the mean or expectation of the distribution. $\\sigma$ is its standard deviation. The variance of the distribution is $\\sigma^{2}$.   Quiz What is the parameter $\\mu$? The parameter $\\mu$ is the mean or expectation of the distribution.\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"6f4078728d71b1b791d39f218bf2bdb1","permalink":"https://alexandrerays.github.io/courses/example/stats/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/courses/example/stats/","section":"courses","summary":"Introduction to statistics for data science.\n","tags":null,"title":"Statistics","type":"book"},{"authors":[],"categories":null,"content":"","date":1742428800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1742428800,"objectID":"b55269ecdf40f1dc0142c355938d7a41","permalink":"https://alexandrerays.github.io/talk/driving-impact-through-innovation-oncoai-at-impacta-mais-2025/","publishdate":"2025-03-20T00:00:00Z","relpermalink":"/talk/driving-impact-through-innovation-oncoai-at-impacta-mais-2025/","section":"event","summary":"A roundtable at Impacta Mais 2025 where OncoAI and industry leaders discussed impact metrics, stakeholder engagement, and sustainable innovation.","tags":[],"title":"Driving Impact Through Innovation - OncoAI at Impacta Mais 2025","type":"event"},{"authors":["Jaqueline Alvarenga Silveira","Alexandre Ray","Mariana Zuliani Theodoro de Lima"],"categories":null,"content":"","date":1738972800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1738972800,"objectID":"c25d1e1cc8c6b248383afefa41400278","permalink":"https://alexandrerays.github.io/publication/harnessing-artificial-intelligence-for-predicting/","publishdate":"2025-02-08T00:00:00Z","relpermalink":"/publication/harnessing-artificial-intelligence-for-predicting/","section":"publication","summary":"We conduct a study in which participants form American Sign Language hand signs while being recorded with a Microsoft Kinect. The resulting infra-red distance data are used to train both neural networks with dropout (dropout NN) and Random Forests; dropout NN perform significantly better.","tags":["Breast Cancer","Computational Intelligence","Machine Learning","Predictive medicine","Symbolic AI","Artificial Intelligence"],"title":"Harnessing artificial intelligence for predicting breast cancer recurrence: a systematic review of clinical and imaging data","type":"publication"},{"authors":["Mariana Zuliani Theodoro de Lima","Alexandre Ray","Jaqueline  Alvarenga  Silveira","Andr√©  Luiz  da  Silva","Jo√£o Gabriel  Guideli  Sena  Rios","Jefferson  Mazzei","Daniela Gregolin Giannotti"],"categories":null,"content":"","date":1734652800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1734652800,"objectID":"23ec2fff6cf674fa61d2afee163ab6c9","permalink":"https://alexandrerays.github.io/publication/development-of-ai-applied-to-predictive-analysis-of-recurrence/","publishdate":"2024-12-20T00:00:00Z","relpermalink":"/publication/development-of-ai-applied-to-predictive-analysis-of-recurrence/","section":"publication","summary":"???","tags":null,"title":"Development of artificial intelligence applied to predictive analysis of recurrence and personalization of medical treatment for patients with breast and lung carcinoma","type":"publication"},{"authors":[],"categories":null,"content":"","date":1733184e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1733184e3,"objectID":"c017a59f84b32d3b57f91fa5f3712159","permalink":"https://alexandrerays.github.io/talk/data-and-ai-in-the-international-remote-market/","publishdate":"2024-12-03T00:00:00Z","relpermalink":"/talk/data-and-ai-in-the-international-remote-market/","section":"event","summary":"Remote work in AI and data careers for global companies offers higher earnings, global experience, and flexibility to live in Brazil with international opportunities.","tags":[],"title":"Data and AI in the International Remote Market","type":"event"},{"authors":null,"categories":null,"content":"Using Git/GitHub in RStudio \u0026mdash; A Beginner\u0026rsquo;s Guide to Version Control Workshop presented at  Stanford Center for Open and Reproducible Science Spring Lecture Series\n Stanford Data Science for Social Good Program (DSSG)\n","date":1733184e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1733184e3,"objectID":"952abc26042054f9662ea7b38a93d505","permalink":"https://alexandrerays.github.io/talks/version-control/","publishdate":"2024-12-03T00:00:00Z","relpermalink":"/talks/version-control/","section":"talks","summary":"Remote work in AI and data careers for global companies offers higher earnings, global experience, and flexibility to live in Brazil with international opportunities.","tags":["Remote Work","Artificial Intelligence"],"title":"Data and AI in the International Remote Market","type":"talks"},{"authors":[],"categories":null,"content":"","date":1732752e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1732752e3,"objectID":"ca879094f4ec78c25f033acd6e84ec28","permalink":"https://alexandrerays.github.io/talk/assessing-the-impact-of-fog-on-autonomous-vehicle-perception-systems/","publishdate":"2024-11-28T00:00:00Z","relpermalink":"/talk/assessing-the-impact-of-fog-on-autonomous-vehicle-perception-systems/","section":"event","summary":"A study on improving autonomous vehicle perception by training YOLOv8 models with fog-simulated data using GANs, showing that diverse conditions enhance object detection accuracy.","tags":[],"title":"Assessing the Impact of Fog on Autonomous Vehicle Perception Systems","type":"event"},{"authors":["Alexandre Ray","BATISTA CAMARGO J√öNIOR, Jo√£o"],"categories":null,"content":"","date":1732752e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1732752e3,"objectID":"821d66fb542f872b123d67862dfae938","permalink":"https://alexandrerays.github.io/publication/assessing-the-impact-of-fog-on-autonomous-vehicle-perception-systems/","publishdate":"2024-11-28T00:00:00Z","relpermalink":"/publication/assessing-the-impact-of-fog-on-autonomous-vehicle-perception-systems/","section":"publication","summary":"???","tags":["Autonomous Vehicles","Perception System","Adverse Weather Conditions","Object Recognition","Generative Adversarial Networks (GAN)"],"title":"Assessing the Impact of Fog on Autonomous Vehicle Perception Systems","type":"publication"},{"authors":[],"categories":null,"content":"","date":1718150400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1718150400,"objectID":"08d82b075016fe4540e04aaeee337438","permalink":"https://alexandrerays.github.io/talk/revolutionizing-healthcare-with-generative-ai-opportunities-and-challenges/","publishdate":"2024-06-12T00:00:00Z","relpermalink":"/talk/revolutionizing-healthcare-with-generative-ai-opportunities-and-challenges/","section":"event","summary":"This talk explores how GAN-based generative AI is revolutionizing healthcare through synthetic data and diagnostic imaging, while addressing key challenges.","tags":[],"title":"Revolutionizing Healthcare with Generative AI Opportunities and Challenges","type":"event"},{"authors":[],"categories":null,"content":"","date":1667174400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1667174400,"objectID":"b5a24306aedafdaceab391da35da1038","permalink":"https://alexandrerays.github.io/talk/how-to-create-an-object-detection-project-from-scratch-to-deploy/","publishdate":"2022-10-31T00:00:00Z","relpermalink":"/talk/how-to-create-an-object-detection-project-from-scratch-to-deploy/","section":"event","summary":"A practical overview of YOLO v7's fast and accurate object detection, presented at Python Brazil 2022 in Manaus.","tags":[],"title":"How to create an object detection project from scratch to deploy?","type":"event"},{"authors":[],"categories":null,"content":"","date":1666224e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1666224e3,"objectID":"c4c23370fa977e4087ecee88ca9317d9","permalink":"https://alexandrerays.github.io/talk/how-data-analysis-can-leverage-your-companys-results/","publishdate":"2022-10-20T00:00:00Z","relpermalink":"/talk/how-data-analysis-can-leverage-your-companys-results/","section":"event","summary":"A panel on how companies make decisions using data analysis, covering analysis types, the role of data professionals, and real-world problem solving.","tags":[],"title":"How data analysis can leverage your company's results","type":"event"},{"authors":["Alexandre Ray"],"categories":["rmarkdown"],"content":"Table of Contents  Motivation Step 1: Install {posterdown} Step 2: Open a posterdown template Step 3: Personalize ‚ú®  Icons CSS   Step 4: Share üì° Acknowledgements üôèüèº    Motivation If you know me, you know I like using  for just about anything. When it was time to create my first academic conference poster, I knew I didn\u0026rsquo;t want to waste any time moving between different software environments or copy-pasting and manually formatting text, tables, figures, and results.\nInstead, I wanted to generate a fully reproducible and nicely formatted conference poster using R Markdown. Turns out; the R package {posterdown} makes this quite simple! In this post, I\u0026rsquo;ll briefly show you how to create your own poster using the posterdown package.\nFor a sneak peek of what you can do with posterdown, you can find my first posterdown creation here and the underlying code here.\nStep 1: Install {posterdown} First, we\u0026rsquo;ll install the posterdown package.\ninstall.packages(\u0026quot;posterdown\u0026quot;)  After you\u0026rsquo;ve successfully installed posterdown, restart R.\nStep 2: Open a posterdown template After you\u0026rsquo;ve installed posterdown and restarted R, you should now be able to find a few new templates in your RStudio. Navigate to\nFile \u0026gt; New File \u0026gt; R Markdown ... \u0026gt; From Template\nand select any of the posterdown templates.\nClick to view screenshot  There are three options available: Posterdown HTML, Posterdown Betterland, and Posterdown Betterport.\nWhile the HTML template looks more like a classic scientific poster, the Betterland and Betterport templates create a poster with a large amount of space dedicated to a main take-away message. The difference between the latter two is that Betterland is landscape-oriented, while Betterport is portrait-oriented.\nYou can find more about the different templates at the posterdown wiki.\nStep 3: Personalize ‚ú® After you\u0026rsquo;ve selected a template (I\u0026rsquo;ve gone with Posterdown HTML), you can simply üß∂ knit üß∂ it to see what the generated html document looks like. Next, you can personalize the poster to your liking, starting with the yaml at the top of the document (i.e., all the metadata specified between ---, such as title and author).\nThe posterdown package allows for quite a bit of customization. For example, you can set the dimensions of your poster using poster_height and poster_width; set fonts for the text and title of the poster using font_family and titletext_fontfamily; and you can set colors using primary_colour, secondary_colour, and accent_colour. For a comprehensive list of the yaml options, check out the Wiki of your chosen template.\nIcons Since we\u0026rsquo;re using R Markdown to create our poster, we can use any R package to further customize it. For example, I really like to use icons, so I used the icons package for this. First, I installed and loaded the icons package.\nremotes::install_github(\u0026quot;mitchelloharawild/icons\u0026quot;) #install icons package library(icons) #load icons package  Next, you can write inline code (code between single back ticks) to customize your poster with icons. For example,\n`r icons::fontawesome(\u0026quot;github\u0026quot;)`  will create an inline github icon:\n\nIf you\u0026rsquo;d like to further customize your icons, you can wrap the code above with the icon_style() function and pass additional comma-separated arguments, such as scale and fill to set the size and color of the icon.\nFor example,\n`r icon_style(icons::academicons(\u0026quot;osf\u0026quot;), scale = 2, fill = \u0026quot;#BBDEFB\u0026quot;)`  will create a larger OSF icon in blue:\n \nCSS If you\u0026rsquo;re like me, you might want to customize your poster even more. In that case, posterdown allows you to pass a css file with further customizations. For example, as you may have noticed from spending more than 5 seconds on my website, I really like this color. I wanted all my bold text to show up in this color, so I did the following two things:\nCreate a css file with further customizations First, I created a style.css file in my working directory (i.e., the place where my .Rmd is located). In this css file, I specified my preferred color for bold text:\n:root { --text-bold-color: #BBDEFB; } strong { font-weight: bold; color: var(--text-bold-color); }  Reference the css file in the yaml After creating my style.css file in the working directory, I referenced it in the metadata of my Rmd:\noutput: posterdown::posterdown_html: self_contained: true css: style.css  Et voil√†! My bolded text is now in my favorite shade of blue.\nStep 4: Share üì° You will likely want to share your poster with an external audience; to do so, it helps to create a self-contained document by setting self_contained: true under output. In addition, I knew that I wanted to automatically generate a PDF for sharing, so I added the following line to my yaml:\nknit: pagedown::chrome_print  And that\u0026rsquo;s it!\nAcknowledgements üôèüèº ‚ù§Ô∏é The posterdown package was developed by Brent Thorne\n‚ù§Ô∏é The icons package was developed by Mitchell O\u0026rsquo;Hara-Wild\nI hope this was helpful! Feel free to leave a comment \n","date":1660694400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1660767709,"objectID":"b795df4f99eed790bc89e23d352c39d6","permalink":"https://alexandrerays.github.io/post/academic-conference-posters-using-posterdown/","publishdate":"2022-08-17T00:00:00Z","relpermalink":"/post/academic-conference-posters-using-posterdown/","section":"post","summary":"A quick guide to generating reproducible and automatically formatted conference posters in R Markdown using the posterdown package","tags":[],"title":"222Academic conference posters using {posterdown}","type":"post"},{"authors":["Alexandre Ray"],"categories":["rmarkdown"],"content":"Table of Contents  Motivation Step 1: Install {posterdown} Step 2: Open a posterdown template Step 3: Personalize ‚ú®  Icons CSS   Step 4: Share üì° Acknowledgements üôèüèº    Motivation If you know me, you know I like using  for just about anything. When it was time to create my first academic conference poster, I knew I didn\u0026rsquo;t want to waste any time moving between different software environments or copy-pasting and manually formatting text, tables, figures, and results.\nInstead, I wanted to generate a fully reproducible and nicely formatted conference poster using R Markdown. Turns out; the R package {posterdown} makes this quite simple! In this post, I\u0026rsquo;ll briefly show you how to create your own poster using the posterdown package.\nFor a sneak peek of what you can do with posterdown, you can find my first posterdown creation here and the underlying code here.\nStep 1: Install {posterdown} First, we\u0026rsquo;ll install the posterdown package.\ninstall.packages(\u0026quot;posterdown\u0026quot;)  After you\u0026rsquo;ve successfully installed posterdown, restart R.\nStep 2: Open a posterdown template After you\u0026rsquo;ve installed posterdown and restarted R, you should now be able to find a few new templates in your RStudio. Navigate to\nFile \u0026gt; New File \u0026gt; R Markdown ... \u0026gt; From Template\nand select any of the posterdown templates.\nClick to view screenshot  There are three options available: Posterdown HTML, Posterdown Betterland, and Posterdown Betterport.\nWhile the HTML template looks more like a classic scientific poster, the Betterland and Betterport templates create a poster with a large amount of space dedicated to a main take-away message. The difference between the latter two is that Betterland is landscape-oriented, while Betterport is portrait-oriented.\nYou can find more about the different templates at the posterdown wiki.\nStep 3: Personalize ‚ú® After you\u0026rsquo;ve selected a template (I\u0026rsquo;ve gone with Posterdown HTML), you can simply üß∂ knit üß∂ it to see what the generated html document looks like. Next, you can personalize the poster to your liking, starting with the yaml at the top of the document (i.e., all the metadata specified between ---, such as title and author).\nThe posterdown package allows for quite a bit of customization. For example, you can set the dimensions of your poster using poster_height and poster_width; set fonts for the text and title of the poster using font_family and titletext_fontfamily; and you can set colors using primary_colour, secondary_colour, and accent_colour. For a comprehensive list of the yaml options, check out the Wiki of your chosen template.\nIcons Since we\u0026rsquo;re using R Markdown to create our poster, we can use any R package to further customize it. For example, I really like to use icons, so I used the icons package for this. First, I installed and loaded the icons package.\nremotes::install_github(\u0026quot;mitchelloharawild/icons\u0026quot;) #install icons package library(icons) #load icons package  Next, you can write inline code (code between single back ticks) to customize your poster with icons. For example,\n`r icons::fontawesome(\u0026quot;github\u0026quot;)`  will create an inline github icon:\n\nIf you\u0026rsquo;d like to further customize your icons, you can wrap the code above with the icon_style() function and pass additional comma-separated arguments, such as scale and fill to set the size and color of the icon.\nFor example,\n`r icon_style(icons::academicons(\u0026quot;osf\u0026quot;), scale = 2, fill = \u0026quot;#BBDEFB\u0026quot;)`  will create a larger OSF icon in blue:\n \nCSS If you\u0026rsquo;re like me, you might want to customize your poster even more. In that case, posterdown allows you to pass a css file with further customizations. For example, as you may have noticed from spending more than 5 seconds on my website, I really like this color. I wanted all my bold text to show up in this color, so I did the following two things:\nCreate a css file with further customizations First, I created a style.css file in my working directory (i.e., the place where my .Rmd is located). In this css file, I specified my preferred color for bold text:\n:root { --text-bold-color: #BBDEFB; } strong { font-weight: bold; color: var(--text-bold-color); }  Reference the css file in the yaml After creating my style.css file in the working directory, I referenced it in the metadata of my Rmd:\noutput: posterdown::posterdown_html: self_contained: true css: style.css  Et voil√†! My bolded text is now in my favorite shade of blue.\nStep 4: Share üì° You will likely want to share your poster with an external audience; to do so, it helps to create a self-contained document by setting self_contained: true under output. In addition, I knew that I wanted to automatically generate a PDF for sharing, so I added the following line to my yaml:\nknit: pagedown::chrome_print  And that\u0026rsquo;s it!\nAcknowledgements üôèüèº ‚ù§Ô∏é The posterdown package was developed by Brent Thorne\n‚ù§Ô∏é The icons package was developed by Mitchell O\u0026rsquo;Hara-Wild\nI hope this was helpful! Feel free to leave a comment \n","date":1660694400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1660767709,"objectID":"9bcd11828dfc6a53a362472b31aaeacb","permalink":"https://alexandrerays.github.io/post/academic-conference-posters-using-posterdown/","publishdate":"2022-08-17T00:00:00Z","relpermalink":"/post/academic-conference-posters-using-posterdown/","section":"post","summary":"A quick guide to generating reproducible and automatically formatted conference posters in R Markdown using the posterdown package","tags":[],"title":"Academic conference posters using {posterdown}","type":"post"},{"authors":["Alexandre Ray"],"categories":null,"content":"Writing executable and fully reproducible (APA) manuscripts in R Workshop presented at  University of Amsterdam Lecture Series on Good Research Practices\n Stanford Center for Open and Reproducible Science Fall Lecture Series\n International Association for Conflict Management Annual Conference\n Stanford Data Science for Social Good Program (DSSG)\n Stanford Center for Open and Reproducible Science launch event\nAvailable recordings  Stanford Center for Open and Reproducible Science\n International Association for Conflict Management\n","date":1653350400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653350400,"objectID":"dce5312a8b9e365fe9489614b7ad735d","permalink":"https://alexandrerays.github.io/talks/reporting/","publishdate":"2022-05-24T00:00:00Z","relpermalink":"/talks/reporting/","section":"talks","summary":"Writing executable and fully reproducible (APA) manuscripts in R","tags":["github","rmarkdown"],"title":"Reproducible reporting with R Markdown","type":"talks"},{"authors":["Alexandre Ray"],"categories":null,"content":"Lay Perceptions of Scientific Findings: Swayed by the Crowd? Talk presented at  Stanford Data Science\n The Meta- Research Innovation Center at Stanford (METRICS)\n The Toronto Workshop on Reproducibility\n Society for Social and Personality Psychology (SPSP) Annual Conference\n The Psychological Science Accelerator Conference (PSACON)\n The Rising Scholars Conference, Harvard Business School\n Symposium on Efforts to Improve Psychological Science, TPA\nAvailable recordings  Metrics International Forum\n Toronto Workshop on Reproducibility\n Taiwan Psychological Association (TPA)\n SPSP Poster Pitch\n PSACON\n","date":1653350400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653350400,"objectID":"6a19a31cc7585e191b210e9f1576ee46","permalink":"https://alexandrerays.github.io/talks/crowd-science/","publishdate":"2022-05-24T00:00:00Z","relpermalink":"/talks/crowd-science/","section":"talks","summary":"Lay Perceptions of Scientific Findings --- Swayed by the Crowd?","tags":["Lay Perceptions","Science Skepticism","Crowd Science","Meta-Science"],"title":"The Sway and Credibility of Crowd Science","type":"talks"},{"authors":[],"categories":null,"content":"","date":1636416e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1636416e3,"objectID":"f0304418defbcaad8ecdb84dae2460e4","permalink":"https://alexandrerays.github.io/talk/round-table-the-challenges-of-law-in-the-face-of-predictive-algorithms/","publishdate":"2021-11-09T00:00:00Z","relpermalink":"/talk/round-table-the-challenges-of-law-in-the-face-of-predictive-algorithms/","section":"event","summary":"An introduction to Machine Learning for law students, highlighting key challenges like algorithmic bias, deepfakes, data privacy, and legal applications.","tags":[],"title":"Round Table - The challenges of law in the face of predictive algorithms","type":"event"},{"authors":[],"categories":["rmarkdown","visualization"],"content":"Table of Contents  Motivation Step 1: Install {raincloudplots} Step 2: Simulate some data Step 3: Initialize the data-format Step 4: Make it rain! üåß Acknowledgements    Motivation I love effective data visualization that combines the distribution of the data, individual data points, and summary statistics. I recently discovered a new tool for doing just this, with the R package {raincloudplots}. The \u0026lsquo;rain\u0026rsquo; stands for the raw data, and the \u0026lsquo;cloud\u0026rsquo; stands for the data distribution. In this post, I showcase my first raincloud plot, and how to recreate it.\nStep 1: Install {raincloudplots} First, we\u0026rsquo;ll install the raincloudplots package from GitHub and load it.\nif (!require(remotes)) { install.packages(\u0026quot;remotes\u0026quot;) } remotes::install_github('jorvlan/raincloudplots') library(raincloudplots)  Step 2: Simulate some data In one of my research projects, I\u0026rsquo;m planning to explore whether crowdsourced data analysis, also known as multi-analyst studies \u0026mdash; giving the same dataset to different teams of scientists, who independently analyze it to answer the same research question \u0026mdash; can increase the sway and credibility of scientific research. That is, are the results of multi-analyst (vs. single-analyst) studies more likely to sway someone\u0026rsquo;s prior beliefs?\nGive me some more background information on the data and research setting Before reading the results of a scientific study, study participants will report their prior beliefs in a specific phenomenon on a scale of 0% (very unlikely) to 100% (very likely).\ngraph LR A[Report \u0026lt;br\u0026gt; prior beliefs] A ==\u0026gt;B[Read \u0026lt;br\u0026gt; single-analyst results] A ==\u0026gt;C[Read consistent \u0026lt;br\u0026gt; multi-analyst results] A ==\u0026gt;D[Read inconsistent \u0026lt;br\u0026gt; multi-analyst results] E[Report \u0026lt;br\u0026gt; final beliefs] B ==\u0026gt; E C ==\u0026gt; E D ==\u0026gt; E style A fill:#f6d4d1,stroke:#333,stroke-width:4px style B fill:#f6d4d1,stroke:#333,stroke-width:4px style C fill:#f6d4d1,stroke:#333,stroke-width:4px style D fill:#f6d4d1,stroke:#333,stroke-width:4px style E fill:#f6d4d1,stroke:#333,stroke-width:4px  Afterwards, study participants will be randomly allocated to one of three groups: one group will read the results of a conventional, single-analyst study; one group will read the results of a multi-analyst study with consistent results; one group will read the results of a multi-analyst study with inconsistent result.\nAfter reading the study results, the study participants will again report their belief in the phenomenon on a scale of 0% (very unlikely) to 100% (very likely).\n Below, I simulate some data that are in line with the hypotheses we\u0026rsquo;re planning to preregister: we expect that, compared to single-analyst studies, multi-analyst studies with inconsistent, highly variable results will negatively affect prior beliefs (i.e., research consumers will be less likely to believe in the reported phenomenon), while multi-analyst studies with consistent, positive results will positively affect prior beliefs.\nGive me some more information about the simulation For the prior beliefs of all three participant groups, we\u0026rsquo;ll make 500 random draws from a normal distribution with ùúá = 65 and ùúé = 5.\nFor the final beliefs of participants reading a single-analyst study, we\u0026rsquo;ll draw from a normal distribution with ùúá = 72 and ùúé = 6. For the final beliefs of participants reading a multi-analyst study with consistent results, we\u0026rsquo;ll draw from a normal distribution with ùúá = 75 and ùúé = 7.\nFor the remaining group (the inconsistent multi-analyst condition), we\u0026rsquo;ll draw from a normal distribution with ùúá = 55 and ùúé = 9. This reflects our hypothesis that beliefs in a phenomenon will decrease after observing a multi-analyst study with highly variable results.\n set.seed(3) prior \u0026lt;- replicate(n = 3, rnorm(n = 500, mean = 65, sd = 5)) final_single \u0026lt;- rnorm(n = 500, mean = 72, sd = 6) final_multi_consistent \u0026lt;- rnorm(n = 500, mean = 75, sd = 7) final_multi_inconsistent \u0026lt;- rnorm(n = 500, mean = 55, sd = 9)  Step 3: Initialize the data-format For this step, you\u0026rsquo;ll need to choose between several possible designs that you can find here: e.g., a 1-by-1, 2-by-2, or 2-by-3 (repeated measures) raincloud. In my case, I have 3 different groups (the single-analyst condition, the consistent multi-analyst condition, and the inconsistent multi-analyst condition) with 2 measures each (prior beliefs and final beliefs), so I\u0026rsquo;m creating a 2 x 3 raincloud.\nThe {raincloudplot} function to set up the desired data format for a 2 x 3 raincloud is called data_2x2(). (Confusing, I know). For other options and how to initialize them, check out this page.\ndf_2x3 \u0026lt;- data_2x2( array_1 = prior[,1], array_2 = final_single, array_3 = prior[,2], array_4 = final_multi_consistent, array_5 = prior[,3], array_6 = final_multi_inconsistent, labels = (c('Prior Beliefs','Final Beliefs')), jit_distance = .09, jit_seed = 321)  Step 4: Make it rain! üåß Finally, we\u0026rsquo;ll use the raincloud_2x3_repmes() function to create our 2x3 raincloud.\ncolors \u0026lt;- rep(c(\u0026quot;dodgerblue\u0026quot;, \u0026quot;darkorange\u0026quot;), 3) #choose colors raincloud_2x3_repmes( data = df_2x3, colors = colors, fills = colors, size = 1, alpha = .6, ort = \u0026quot;h\u0026quot;) + #set to v for vertical plot scale_x_continuous( breaks = c(1,2,3), limits = c(0.8, 4.3), labels = rep(\u0026quot;\u0026quot;, 3)) + ylab(\u0026quot;Rated Beliefs\u0026quot;) + annotate(geom = \u0026quot;text\u0026quot;, label = \u0026quot;Single-Analyst\u0026quot;, x = 1.5, y = 42) + annotate(geom = \u0026quot;text\u0026quot;, label = \u0026quot;Multi-Analyst: Consistent\u0026quot;, x = 2.5, y = 38) + annotate(geom = \u0026quot;text\u0026quot;, label = \u0026quot;Multi-Analyst: Inconsistent\u0026quot;, x = 3.9, y = 38) + annotate(geom = \u0026quot;text\u0026quot;, label = \u0026quot;Prior Beliefs\u0026quot;, x = 4.2, y = 55, size = 5, color = \u0026quot;dodgerblue\u0026quot;) + annotate(geom = \u0026quot;text\u0026quot;, label = \u0026quot;vs.\u0026quot;, x = 4.2, y = 66, size = 5) + annotate(geom = \u0026quot;text\u0026quot;, label = \u0026quot;Final Beliefs\u0026quot;, x = 4.2, y = 77, size = 5, color = \u0026quot;darkorange\u0026quot;) + theme_classic() + theme(axis.ticks.y = element_blank(), axis.text = element_text(size = 9), axis.title.y = element_blank())  And we\u0026rsquo;re done! For more options and information, feel free to check out the paper cited below. A huge thank you to the {raincloudplots} package developers.‚ù§Ô∏é\nAcknowledgements Allen M, Poggiali D, Whitaker K et al. Raincloud plots: a multi-platform tool for robust data visualization [version 2; peer review: 2 approved]. Wellcome Open Res 2021, 4:63. DOI: 10.12688/wellcomeopenres.15191.2\n","date":1626652800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1626740035,"objectID":"d36294f4dc1603dd56795e1cb222fa95","permalink":"https://alexandrerays.github.io/post/visualizing-data-with-raincloud-plots/","publishdate":"2021-07-19T00:00:00Z","relpermalink":"/post/visualizing-data-with-raincloud-plots/","section":"post","summary":"A quick guide to effective data visualization combining the distribution of the data, individual data points, and summary statistics","tags":[],"title":"Visualizing data with raincloud plots","type":"post"},{"authors":["Alexandre Ray"],"categories":["rmarkdown"],"content":"Table of Contents  Motivation  A reproducible workflow The result   Materials  Acknowledgements      Motivation I recently gave a talk on writing reproducible manuscripts using R Markdown and the R package papaja (preparing apa journal articles). One of my main motivations for using R to write up my manuscripts is contained in a tweet by Pamela Jacobsen:\n Why does so much of academia involve cutting and pasting information from one document to another document?\nPamela Jacobsen (May 17, 2021)\n A reproducible workflow In the workshop, I go through methods that keep you from manually transcribing and/or copy pasting tables, figures, statistical output, and citations over and over again.\nPerhaps my favorite introduction to the idea of a reproducible workflow (and the horrors of a non-reproducible workflow) is given in this short YouTube video:\n    Benefits The video hints at some of the benefits of a reproducible workflow. A reproducible workflow is\u0026hellip;\n‚ö†Ô∏è Less error-prone\n‚è≥ Less time-consuming\n‚áÑ More dynamic\nüîé More transparent\nThe result You can find a list of papers written with papaja here. Here\u0026rsquo;s a sneak peek of what\u0026rsquo;s happening behind the scenes, and the rendered result:\nMaterials If you want to learn more, you can find the slides here .\nIf you have trouble loading the slides, you can browse through (and save) a static version of the slides below.\nüí° Pro tip: if you are on a mobile device, click on 75% in the toolbar to adjust the size of the slides to Zoom to: Page Width.\n If you\u0026rsquo;d like an example manuscript to work with, I\u0026rsquo;ve uploaded some materials to this OSF folder.\nFeel free to leave a comment or a question\nAcknowledgements ‚ù§Ô∏é Slides created with the R package xaringan\n‚ù§Ô∏é papaja created by Frederik Aust\n‚ù§Ô∏é GIFs created by Shannon Pileggi\n‚ù§Ô∏é Artwork created by Allison Horst\n","date":1625961600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1626024857,"objectID":"1db97d67f7d830c6393a25fb9ced0e76","permalink":"https://alexandrerays.github.io/post/writing-reproducible-manuscripts-in-r/","publishdate":"2021-07-11T00:00:00Z","relpermalink":"/post/writing-reproducible-manuscripts-in-r/","section":"post","summary":"A workshop on writing reproducible APA manuscripts using R Markdown and papaja","tags":[],"title":"Writing reproducible manuscripts in R","type":"post"},{"authors":["Alexandre Ray"],"categories":["computing"],"content":"Table of Contents  Step 1: Setting up Sherlock  Create an account Set up SSH connection   Step 2: Setting up ClusterJob  Create an account Install ClusterJob Set up SSH configuration   Step 3: Submit your first job ‚öíÔ∏é  Run your first serial computation Run your first parallel computation   Acknowledgements    In this tutorial, I\u0026rsquo;ll walk through the process of running a large computational experiment using two tools: ClusterJob and Sherlock. ClusterJob is an automation system for high-throughput reproducible computations, created by Hatef Monajemi and David L. Donoho. Sherlock is Stanford\u0026rsquo;s High Performance Computing (HPC) cluster.\nYou can also find an exact replica of this tutorial on a separate website I created for Statistics 285: Massive Computational Experiments, Painlessly, a course taught at Stanford University in Spring 2021. Note that Sherlock is, unfortunately, only accessible to the Stanford community.\nMy goal is to provide a relatively painless introduction to High Performance Computing at Stanford.\nStep 1: Setting up Sherlock Create an account  Request a Sherlock account   If you don\u0026rsquo;t already have a Sherlock account, now\u0026rsquo;s the time to request one. After creating an account, you\u0026rsquo;ll want to set up your access credentials using SSH keys, which allows for remote communication between your local machine and the cluster.\nSet up SSH connection To set up your connection, check if you already have SSH keys on your machine. You can do this in two ways:\n‚òûÔ∏é Go to your home directory and navigate to the hidden1 .ssh folder\n‚òûÔ∏é Go to your terminal and enter ls -al ~/.ssh\nIf you see a .pub file, you already have SSH keys set up. If you don\u0026rsquo;t, run the following in your terminal:\nssh-keygen -t rsa -C \u0026quot;your_email@example.com\u0026quot;  Now, all you need to do is copy your keys over to the remote cluster.\nssh-copy-id your-username@sherlock.stanford.edu #run this in your terminal  Next, add the following to your ~.ssh/config file to avoid Two-Factor Authentication every time you access the cluster, either from your local machine or through ClusterJob.\nHost sherlock sherlock?? sherlock.stanford.edu sherlock??.stanford.edu ControlMaster auto ControlPath ~/.ssh/%r@%h:%p ControlPersist yes #this enables direct access to sherlock using your terminal Host login.sherlock.stanford.edu ControlMaster auto ControlPath ~/.ssh/%l%r@%h:%p ControlPersist yes #this enables access to sherlock using ClusterJob  Show me how to edit my ~.ssh/config file Editing your ~.ssh/config file can be done in two ways:\n‚òûÔ∏é Directly, by navigating to .ssh \u0026gt; config from your home directory\n‚òûÔ∏é Through your terminal, by running:\ncd ~/.ssh #change directory to the .ssh folder open config   You can now check whether your connection works by trying to connect directly to the server. In your terminal, run:\nssh your-username@sherlock.stanford.edu  The first time you do this, you\u0026rsquo;ll likely get a warning like this:\nThe authenticity of host 'login.sherlock.stanford.edu' can't be established. ECDSA key fingerprint is SHA256:eB0bODKdaCWtPgv0pYozsdC5ckfcBFVOxeMwrNKdkmg. Are you sure you want to continue connecting (yes/no)?  Simply type \u0026lsquo;yes\u0026rsquo; and proceed. After completing these steps, your Sherlock account should be ready to go! üéâ\nStep 2: Setting up ClusterJob Create an account  Create a ClusterJob account   Set up an account with ClusterJob using your @edu email account. Take note of your chosen ClusterJob ID and the ClusterJob Key assigned to your account.\nInstall ClusterJob In your terminal, run:\ngit clone https://github.com/monajemi/clusterjob.git ~/CJ_install #clones CJ from GitHub sudo cpan -i Data::Dumper Data::UUID FindBin File::chdir File::Basename File::Spec IO::Socket::INET IO::Socket::SSL Getopt::Declare Term::ReadLine JSON::PP JSON::XS Digest::SHA Time::Local Time::Piece Moo HTTP::Thin HTTP::Request::Common JSON URI #installs perl dependencies alias cj='perl ~/CJ_install/src/CJ.pl'; #builds an alias for CJ  Set up SSH configuration You just installed a CJ_install folder to your home directory. In it, you will find two important files that you\u0026rsquo;ll need to edit: cj_config and ssh_config.\nIn cj_config, you\u0026rsquo;ll provide your ClusterJob ID (the username you chose) and the ClusterJob Key you received when creating your account.\nCopy the following into the cj_config file:\nCJID\tyour-id #edit this\tCJKEY\teyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhZG1pbiI6MCwiZCI6eyJ1aWQiOiJzaGlsYWFuIiwiY2pwYXNzY29kZSI6IjJmYWQ2OWU1YjZlNDQxNDE2NjhhOTIxZThiMmNlNTYwIn19.P60piuQFOmzny9dFmwWoWDGeNrtsi6UHl_16OIdoICa-C6Y8KeGadT6pcMJvyKLlBs163rR_p1CXkm33l6L8fhH9tsJGG3UN4cMocWsVeWH_ORfZsdNvuWa24IO2Yh7MPMTj067e9UodDcOYe7N2swu9eWfvC82YBk7Ubna3ZDnHi4icK06exK1_mIj8jv0fDzHS4m0eWd5u0Sg1YecMp9YXU3DEc_l3Hxroyc_qnfVmK9WhiDTfAx6ZYoHxFF2VecWVsOB6-Pq6cjYKKw7BQIiLbQ0VLIZmwjX3QiQRTvi6vX4vsfwxHTvsNKGE_L2ru9NAfcuRigX1mgOCLBwU9g #edit this\tSYNC_TYPE\tmanual\tSYNC_INTERVAL\t300   The cj_config file is somehow very sensitive to spacing and line breaks. Make sure you add linebreaks, like in the example above, or you\u0026rsquo;ll get obscure error messages when running ClusterJob.   In ssh_config, you\u0026rsquo;ll provide information about the Sherlock cluster. Copy the following into the ssh_config file:\n[sherlock2] Host\tlogin.sherlock.stanford.edu User\tyour-username\t#edit this to your own username Bqs\tSLURM Repo\t/scratch/users/your-username/CJRepo_Remote #edit this Python\tpython/3.8.8 Pythonlib\tIPython:pandas:numpy:libgcc:scipy:matplotlib:cvxpy:-c conda-forge Alloc\t--time 48:00:00 --mem 32G R\tR/3.4.0 Rlib\tggplot2 [sherlock2]  Show me how to edit my cj_config and ssh_config files Again, you can edit these two files through your terminal or manually:\n‚òûÔ∏é Directly navigate to CJ_install \u0026gt; cj_config/ssh_config from your home directory\n‚òûÔ∏é Through your terminal, run:\ncd ~/CJ_install open cj_config open ssh_config   We\u0026rsquo;re ready to check if everything is working correctly. In your terminal, run:\ncj init #initialize your CJ agent cj who #check if the agent is installed cj update #update to newest version  Step 3: Submit your first job ‚öíÔ∏é Here\u0026rsquo;s where the real benefit of ClusterJob comes in. To run a job on Sherlock, you normally have to write a job submission script describing your resource request and submission options. ClusterJob automates this process and does it for you! No need to learn anything about Sherlock\u0026rsquo;s job scheduler, Slurm.\nRun your first serial computation The CJ_install folders comes with some example scripts to run, so let\u0026rsquo;s give those a try.\nShow me the script I\u0026rsquo;m about to run # This is a test Python script for CJ # Author: Hatef Monajemi June 11 2017 import numpy as np; import csv; SUID = 'monajemi' file = SUID+'_results.csv'; Var0 = np.array([1,2,3]); Var1 = [1,2]; with open('file.txt','w') as myfile: for i in range(len(Var0)): for j in range(len(Var1)): # This is a comment # write to a text file for testing reduce with open(file,'a') as csvfile: resultswriter = csv.writer(csvfile,delimiter=','); resultswriter.writerow([i,j,Var0[i]+Var1[j] ]);   In your terminal, run:\ncd ~/CJ_install/example/Python/ #change directory to the folder with Python example cj run simpleExample.py sherlock2 -m ‚ÄúA message.‚Äù #run your first serial job!  When you run the second command, starting with cj run, you\u0026rsquo;ll get a message like this:\nCJmessage::initiating package 0df1b4e7  In this case, 0df1b4e7 is your job ID (referred to by ClusterJob as pid, for process identifier); take note of it.\nShow me what my CJ messages should look like CJmessage::initiating package 0df1b4e7 CJmessage::runing [simpleExample.py] on [sherlock2] with: alloc: --time 48:00:00 --mem 32G CJmessage::sending from: /Users/shilaan/CJ_install/example/Python CJmessage::Creating/checking conda venv. This may take a while the first time... CJmessage::Creating reproducible script(s) reproduce_simpleExample.py CJmessage::compressing files to propagate... CJmessage::sending 1.92 KB to: sherlock2:/scratch/users/shilaan/CJRepo_Remote/simpleExample CJmessage::extracting package... CJmessage::Submitting job... CJmessage::1 job(s) submitted (24992894)   After you\u0026rsquo;ve successfully submitted your job, you can check its status by running:\ncj state  When your job is done, you\u0026rsquo;ll see a message like this:\npid 0df1b4e7aed70b1a367212f861729d0bc8fcfc29 remote_account: shilaan@login.sherlock.stanford.edu job_id: 24992894 state: COMPLETED  Now, another one of ClusterJob\u0026rsquo;s benefits: it\u0026rsquo;s really easy to get the results of your job back onto your local computer. Run:\ncj get 0df1b4e7 #replace with your own job id  Now, you\u0026rsquo;ll get the following message:\nCJmessage::Getting results from 'sherlock2' CJmessage::Please see your last results in /Users/shilaan/CJ_get_tmp/0df1b4e7aed70b1a367212f861729d0bc8fcfc29  Your results are ready for viewing! ü•≥ The mentioned folder will include your results, your original script, and a script that fully reproduces the results.\nRun your first parallel computation We can rerun the same job we just submitted, but this time do it in parallel. The script we ran included a for loop over 6 elements (or index combinations). Instead of running this script serially, we can run it in parallel: we can submit a separate job for each index combination. In other words, we\u0026rsquo;ll submit 6 separate jobs to Sherlock. Again, ClusterJob will fully automate this process for you.\nIn your terminal, simply run:\ncd ~/CJ_install/example/Python/ #change directory to the folder with Python example cj parrun simpleExample.py sherlock2 -m ‚ÄúA message.‚Äù #run your first parallel job!  Now, you should receive the following message:\nCJmessage::6/6 job(s) submitted  Show me what my CJ messages should look like CJmessage::initiating package 30236535 CJmessage::parruning [simpleExample.py] on [sherlock2] with: alloc: --time 48:00:00 --mem 32G CJmessage::sending from: /Users/shilaan/CJ_install/example/Python CJmessage::Creating/checking conda venv. This may take a while the first time... CJmessage::Invoking Python to find range of indices. Please be patient... Checking command 'python' is available... python available. finding range of indices... Closing Python session! CJmessage::no SLURM partition specified. CJ is using default partition: long,normal CJmessage::Creating reproducible script(s) reproduce_simpleExample.py CJmessage::compressing files to propagate... CJmessage::sending 2.96 KB to: sherlock2:/scratch/users/shilaan/CJRepo_Remote/simpleExample CJmessage::extracting package... CJmessage::Submitting job(s) CJmessage::6/6 job(s) submitted (24994033-24994039)   To get the results, we have to first reduce the results of our parallel run into a single file. To do this, we have to identify the file that contains our results \u0026ndash; in this case, monajemi_results.csv \u0026ndash; and include our job ID. In your terminal, run:\ncj reduce monajemi_results.csv 30236535 #change to your own job ID  You\u0026rsquo;ll be asked if you want to submit the reduce script to the queue via srun. This is recommended for big jobs, but in this case you can simple answer n. Afterwards, you\u0026rsquo;ll get the following message:\nCJmessage::Reducing results done! Use \u0026quot;CJ get 30236535 \u0026quot; to get your results.  Show me what my CJ messages should look like CJmessage::30236535 CJmessage::Checking progress of runs... CJmessage::Reducing monajemi_results.csv CJmessage::Do you want to submit the reduce script to the queue via srun? (recommneded for big jobs) Y/N? n system:ssh shilaan@login.sherlock.stanford.edu 'cd /scratch/users/shilaan/CJRepo_Remote/simpleExample/3023653586353cab1f4601074519eec3c34f9346; bash -l cj_collect.sh' SubPackage 1 Collected (16.67%) SubPackage 2 Collected (33.33%) SubPackage 3 Collected (50.00%) SubPackage 4 Collected (66.67%) SubPackage 5 Collected (83.33%) SubPackage 6 Collected (100.00%) CJmessage::Reducing results done! Use \u0026quot;CJ get 30236535 \u0026quot; to get your results.   Note that the terminal is case-sensitive so we actually have to remove the capitalization from the suggestion and run cj get 30236535. Afterwards, you should get a message like this:\nCJmessage::Please see your last results in /Users/shilaan/CJ_get_tmp/3023653586353cab1f4601074519eec3c34f9346  Navigate to the folder to see the results of your parallel computation!\nAcknowledgements ‚ù§Ô∏é Statistics 285 Teaching Team\n‚ù§Ô∏é Mahsa Lotfi and Andrew Donoho, who went above and beyond in helping me get set up\n‚ù§Ô∏é The ElastiCluster and Clusterjob Tutorial, written by Mahsa Lotfi\n‚ù§Ô∏é The ClusterJob documentation\n‚ù§Ô∏é The Sherlock documentation\n  On Mac, you can view your hidden folders using Command + Shift + .\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":1621728e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1621797623,"objectID":"2454d931274dae3774a2183744627a9e","permalink":"https://alexandrerays.github.io/post/high-performance-computing-at-stanford/","publishdate":"2021-05-23T00:00:00Z","relpermalink":"/post/high-performance-computing-at-stanford/","section":"post","summary":"A step-by-step guide to running massive computational experiments using ClusterJob and Sherlock, aimed at the Stanford community.","tags":[],"title":"High Performance Computing at Stanford","type":"post"},{"authors":["Alexandre Ray"],"categories":["rmarkdown","github","tidyverse"],"content":"Table of Contents  Prerequisites  Resources for getting started with GitHub    Step 1: Create GitHub repository Step 2: Create project with Version Control in RStudio Step 3: Create website with {blogdown} Step 4: Push ‚¨ÜÔ∏é to GitHub Step 5: Deploy site with Netlify Step 6: Customize your site with Wowchemy üé®  Personal information Widgets Menu Theme Website icon   Step 7: Write your first post ‚úç We\u0026rsquo;re done! üí™  Acknowledgements      I finally decided to bite the bullet and create my own website using  {blogdown}. If you\u0026rsquo;re like me, you\u0026rsquo;ve already seen many inspiring examples of websites created with blogdown (for example, the webpages of Julia Silge, Silvia Canel√≥n, and Iv√°n Mauricio Cely Toro), but the process of creating it sounds slightly overwhelming. üò∞\nIf so, this post is for you: I\u0026rsquo;ll walk you through my step-by-step process of building a site using blogdown and the Wowchemy theme for Hugo and deploying it with Netlify. I largely followed the process documented here by Alison Hill. The good news: we\u0026rsquo;ll mostly build and customize the website from the comfort of RStudio. ü•≥\nMy goal is to write a concise step-by-step guide without having you worry too much about what\u0026rsquo;s happening behind the scenes. For a much more comprehensive guide, please check out Alison\u0026rsquo;s blog.\nPrerequisites   Install a recent version of R and RStudio\n Create a GitHub account\n Connect RStudio to GitHub (preferably with HTTPS)\n Sign up with Netlify using your GitHub account\nResources for getting started with GitHub  ‚öíÔ∏é Happy Git and GitHub for the useR\n‚öíÔ∏é The Turing Way Guide for Collaboration\n‚öíÔ∏é Start Your Lab guide 1\nStep 1: Create GitHub repository  Click to create a new repository    Use the following settings:\n‚úì Keep the repository Public\n‚úì Add a README file\n‚úì Do not add .gitignore   Click to view screenshots for Step 1  Step 2: Create project with Version Control in RStudio ‚òûÔ∏é Go to https://github.com/your-username/your-repository\n‚òûÔ∏é Click on the green Code button\n‚òû Copy the HTTPS link to your clipboard\n‚òû Go to RStudio \u0026gt; File \u0026gt; New Project \u0026gt; Version Control \u0026gt; Git\n‚òûÔ∏éÔ∏é Copy paste the HTTPS link under Repository URL\n‚òû Click Create Poject\nClick to view screenshots for Step 2  Step 3: Create website with {blogdown} install.packages(\u0026quot;blogdown\u0026quot;) # install the blogdown package library(blogdown) # load blogdown new_site(theme = \u0026quot;wowchemy/starter-academic\u0026quot;) # create your website!  You will now be asked if you want to serve and preview the site locally (before publishing). Type y in your Console. A preview will show up in your Viewer Pane. Click on the  \u0026ldquo;Show in new window\u0026rdquo; icon next to the üßπ to preview your site in a browser window.\nClick to view screenshots for Step 3  Step 4: Push ‚¨ÜÔ∏é to GitHub In the console, run the following line of code to create a .gitignore file:\nfile.edit(\u0026quot;gitignore\u0026quot;)  Add the following lines to the .gitignore file:\n.Rproj.user .Rhistory .RData .Ruserdata .DS_Store Thumbs.db  Before we make our first commit, we use blogdown to check all our files:\nblogdown::check_site()  This will give you a number of [TODO] items, like adding public and resources to the .gitignore file, which you can do safely. Don\u0026rsquo;t worry about content flagged as draft or files with a future publish date. If you have a [TODO] item related to your .Rprofile, run blogdown::config_Rprofile().\nAfter running these checks, you\u0026rsquo;re ready to commit to GitHub! üéâ\nShow me how to commit to GitHub  ‚òû Go to the Environment Pane\n‚òû Click on Commit under Git\n‚òû Check ‚òëÔ∏é files to Stage them\n‚òû Write a commit message\n‚òû Commit and then Push ‚¨ÜÔ∏é    Step 5: Deploy site with Netlify  Log in to Netlify with GitHub   After logging in to Netlify through GitHub, you can deploy2 your website and change the url to your preferred site name, as follows:\n‚òû Select New site from Git \u0026gt; Continuous Deployment: GitHub\n‚òû Select your website repository\n‚òû Deploy Site\n‚òû Settings \u0026gt; Site information \u0026gt; Change site name\nBack in RStudio, change the baseurl to your new link in your configuration file:\ninstall.packages(\u0026quot;rstudioapi\u0026quot;) library(rstudioapi) # to easily navigate to files rstudioapi::navigateToFile(\u0026quot;config.yaml\u0026quot;)  In config.yaml, set the following:\nbaseurl: 'http://your-site-name.netlify.app' # use the link you just created  Before committing, let\u0026rsquo;s again run\nblogdown::check_site() # checks to resolve critical [TODOs] before commit  Among other things, you need to make sure that the version of Hugo that you are using locally with {blogdown} matches the version used by Netlify (which is specified in netlify.toml). You will likely need to change your netlify.toml file. Remember that you can easily navigate to this file using\nrstudioapi::navigateToFile(\u0026quot;netlify.toml\u0026quot;)  Step 6: Customize your site with Wowchemy üé®  It\u0026rsquo;s time to customize! ‚ù§Ô∏é\n Personal information First, we\u0026rsquo;ll edit the About information (called a widget) on your homepage.\nrstudioapi::navigateToFile(\u0026quot;content/authors/admin/_index.md\u0026quot;)  ‚òû Fill in the _index.md with your personal information (find mine here)\n‚òû Personalize with desired icons \n‚òû Add your picture called avatar.jpg to the content/authors/admin/ folder\nTo change (or remove) the title of your About widget,\nrstudioapi::navigateToFile(\u0026quot;content/home/about.md\u0026quot;)  set title: My new title\nShow me what a personalized page looks like The about page: The shortened bio (appears under your blogposts):  Widgets To get rid of and rename the other widgets on your homepage,\n‚òû Go to the Files tab on your Viewer pane\n‚òû Open the .md of a widget you wish to deactivate, e.g. hero.md 3 ‚òû Write active:false\n‚òû Change titles to your liking with title: My new title\n‚òû Repeat for all other widges you wish to deactivate or personalize\nI wanted to start with a pretty minimal webpage, so I deactivated all widgets except for about.md and posts.md.\nClick to view a screenshot for this step  Menu Now that you\u0026rsquo;ve deactivated some widgets, you\u0026rsquo;ll no longer want to link to them in your main menu (the navigation bar at the top).\nCustomize your main menu in config/_default/menus.yaml\nrstudioapi::navigateToFile(\u0026quot;config/_default/menus.yaml\u0026quot;)  ‚òû name: My new name to change the name of your menu items\n‚òû Remove the links to widgets that you deactivated (here\u0026rsquo;s my menus.yaml)\nTheme ‚òû Pick a built-in Wowchemy color theme\n‚òû rstudioapi::navigateToFile(\u0026quot;config/_default/params.yaml\u0026quot;)\n‚òû Set theme: rose (or whichever your chosen theme is; no capitalization)\nI initially chose the Rose theme, but decided I wanted to further customize the color theme using the steps outlined here:\n‚òëÔ∏é I located the rose.toml file4\n‚òëÔ∏é I created a new data/themes/ folder at the root of my site\n‚òëÔ∏é I copied the rose.toml file into data/themes/shilaan_theme.toml\n‚òëÔ∏é I adjusted the colors as desired using HTML color codes\n‚òëÔ∏é I set theme: shilaan_theme in config/_default/params.yaml\nYou can also customize the font set.\nShow example GitHub files for creating my own theme  data/themes/shilaan_theme.toml\n config/_default/params.yaml\n Website icon By default, your website will be published with the Wowchemy icon in the web browser tab. For example: To get your own Website icon, save a square 512x512 pixel image named icon.png in your root assets/media/ folder. My webpage should now show up in your Browser like this: I followed the steps but my Website icon hasn\u0026rsquo;t changed I ran into this issue. Simply clear your website from your browser history. üßº I didn\u0026rsquo;t realize the problem was caused by my cache until finding this issue.\n Step 7: Write your first post ‚úç To remove the example posts currently populating your website (e.g., Welcome to Wowchemy, the website builder for Hugo), navigate to content/post and remove the folders associated with them (in this case, the getting-started folder).\nIf you find these posts helpful, you can always take another look at them on the Demo site and find their underlying files at themes/starter-academic/exampleSite/content/post.\nIf you really want to keep these files on hand, you can save them as a draft so that they don\u0026rsquo;t publish on your site anymore. You will still see them in your preview when you serve your site locally. For example:\nrstudioapi::navigateToFile(\u0026quot;content/post/getting-started/index.md\u0026quot;)  Now, set draft:true in the front matter. From now on, whenever you run blogdown::check_site(), you will be reminded that you have these files marked as drafts.\nWe\u0026rsquo;re ready to write!\nIn your console, type\nblogdown::new_post( title = \u0026quot;My first post\u0026quot;, ext = '.Rmarkdown', subdir = \u0026quot;post\u0026quot; )  In your Files pane, you will now have a folder (under content/post) with today\u0026rsquo;s date and the title of your post. The crucial file is index.Rmarkdown: this is where you will write your post.\nGo ahead and open index.Rmarkdown. When you knit this5, your website will preview in the Viewer pane. Remember that you can click on the  \u0026ldquo;Show in new window\u0026rdquo; icon next to the üßπ to preview your site in a browser window.\n Make sure you edit the index.Rmarkdown file, not the index.markdown file. The markdown file is automatically created and updated when you knit your Rmarkdown.   Go ahead and add an R code chunk:\n```{r echo=FALSE} library(ggplot2) x = seq(-1, 1, .01) y = sin(x^3)/(1 + x^6) ggplot(aes(x = x, y = y)) + geom_line() + geom_ribbon( aes(ymin = 0, ymax = y), fill = \u0026quot;pink\u0026quot;, alpha = 0.5 ) + theme_void() ```  Knit your Rmarkdown. Check out what it looks like, write your own content, and push‚¨ÜÔ∏é to GitHub when you\u0026rsquo;re ready. Don\u0026rsquo;t forget about the option to run blogdown::check_site().\nShow me screenshots of this step  We\u0026rsquo;re done! üí™  I hope this was helpful! Feel free to leave a comment \n Acknowledgements My workflow, and a large part of the content of this post, is based on Alison Hill\u0026rsquo;s materials. In addition, I would not have made this website if it wasn\u0026rsquo;t for Dani√´l Lakens friendly nudging me (about 5 months ago\u0026hellip; it took me a while to accept my fate). Thank you, Alison and Dani√´l! üôè\n  Thank you to Ari Dyckovsky for suggesting this addition  to the post\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Continuous deployment ensures that your website is rebuilt every time you push‚¨ÜÔ∏é to GitHub.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n The hero widget is the top blue pane that introduces Hugo Academic Starter\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Themes are in themes/github/com/wowchemy/wowchemy-hugo-modules/wowchemy/data. In this folder, go to /fonts for font sets and to themes for color themes.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Use either the Knit button, command + shift + k on Mac, or control + shift + k on Windows/Linux.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":1620777600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1620852371,"objectID":"a2fd8f4005c77eb54c79c25e0cafca44","permalink":"https://alexandrerays.github.io/post/building-your-website-using-r-blogdown/","publishdate":"2021-05-12T00:00:00Z","relpermalink":"/post/building-your-website-using-r-blogdown/","section":"post","summary":"A concise step-by-step guide to building your (academic) website using {blogdown}, GitHub, the Hugo Wowchemy starter-academic theme, and Netlify.","tags":null,"title":"Building your website using R {blogdown}","type":"post"},{"authors":[],"categories":null,"content":"","date":1606953600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1606953600,"objectID":"5696d21b3719f119ffdd8db528b34f79","permalink":"https://alexandrerays.github.io/talk/demystifying-cnns-with-grad-cam/","publishdate":"2020-12-03T00:00:00Z","relpermalink":"/talk/demystifying-cnns-with-grad-cam/","section":"event","summary":"A talk on using Grad-CAM to explain CNN predictions and enhance interpretability in safety-critical deep learning systems.","tags":[],"title":"Demystifying CNNs with Grad-CAM","type":"event"},{"authors":[],"categories":null,"content":"","date":1574812800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1574812800,"objectID":"357d795bd001df598ab6c1a1f8e5eb66","permalink":"https://alexandrerays.github.io/talk/how-to-make-versioning-control-of-data-and-machine-learning-models-using-dvc/","publishdate":"2019-11-27T00:00:00Z","relpermalink":"/talk/how-to-make-versioning-control-of-data-and-machine-learning-models-using-dvc/","section":"event","summary":"A talk on how Open Source DVC helps data scientists manage datasets, model versions, and experiment reproducibility in collaborative projects.","tags":[],"title":"How to make versioning control of data and machine learning models using DVC?","type":"event"},{"authors":[],"categories":null,"content":"","date":1574812800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1574812800,"objectID":"c5c18ffccbe560e8ea53d0f19d7804b5","permalink":"https://alexandrerays.github.io/talk/machine-learning-canvas-from-data-collection-to-value-proposition/","publishdate":"2019-11-27T00:00:00Z","relpermalink":"/talk/machine-learning-canvas-from-data-collection-to-value-proposition/","section":"event","summary":"A mini talk on how the Machine Learning Canvas helps structure ML projects from data collection to value delivery, addressing common pitfalls in practical adoption.","tags":[],"title":"Machine Learning Canvas - From data collection to value proposition","type":"event"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  **Two**  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://alexandrerays.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://alexandrerays.github.io/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"1a6865833907593b247fe726973dbf0b","permalink":"https://alexandrerays.github.io/project/education/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/education/","section":"project","summary":"Analyzing elementary education helps identify strengths, gaps, and inequalities, guiding improvements that support long-term student success and equity.","tags":["Data Analysis"],"title":"Analyzing brazilian elementary education indicators","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"ea849c011c904e09d8ffcbfdf767fc95","permalink":"https://alexandrerays.github.io/project/bike/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/bike/","section":"project","summary":"Mobility-as-a-Service (MaaS) bike-sharing systems offer flexible, app-based transportation in cities while generating valuable data for urban mobility analysis.","tags":["ML","Data Analysis"],"title":"Bike Sharing Demand","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"a3d97ea9c4dc8ad25edebc4e4c45790a","permalink":"https://alexandrerays.github.io/project/mama_cancer/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/mama_cancer/","section":"project","summary":"Predicting breast cancer enables early detection and treatment, and this project uses 2018 Brazilian data to identify key contributing factors.","tags":["Data Analysis"],"title":"Evaluate the main factors that lead to late detection of early breast cancer","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"d84348084970049a6f0cc2867ce41d53","permalink":"https://alexandrerays.github.io/project/tau/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/tau/","section":"project","summary":"Analyzing the link between socioeconomic factors and subway access helps identify transportation inequities and guide more equitable urban planning.","tags":["Data Analysis"],"title":"Socioeconomic aspects versus accessibility to subway stations of the city of S√£o Paulo","type":"project"}]